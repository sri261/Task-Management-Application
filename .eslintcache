[{"/home/sriharsh/Desktop/task-management-application/src/index.tsx":"1","/home/sriharsh/Desktop/task-management-application/src/reportWebVitals.ts":"2","/home/sriharsh/Desktop/task-management-application/src/App.tsx":"3","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/ProjectComponent.tsx":"4","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/ProjectTopBarComponent/ProjectTopBarComponent.tsx":"5","/home/sriharsh/Desktop/task-management-application/src/Apps.tsx":"6","/home/sriharsh/Desktop/task-management-application/src/provider/AuthProvider.tsx":"7","/home/sriharsh/Desktop/task-management-application/src/components/Signin/Signin.tsx":"8","/home/sriharsh/Desktop/task-management-application/src/components/Signup/Signup.tsx":"9","/home/sriharsh/Desktop/task-management-application/src/firebase/firebaseIndex.tsx":"10","/home/sriharsh/Desktop/task-management-application/src/components/TestComp.tsx":"11","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/CardComponent/CardComponent.tsx":"12","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/CardComponent/CaptionComponent/CaptionComponent.tsx":"13"},{"size":481,"mtime":1610033694076,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":1609910416367,"results":"16","hashOfConfig":"15"},{"size":247,"mtime":1609913279717,"results":"17","hashOfConfig":"15"},{"size":396,"mtime":1610095794341,"results":"18","hashOfConfig":"15"},{"size":433,"mtime":1610033669828,"results":"19","hashOfConfig":"15"},{"size":1046,"mtime":1610187338869,"results":"20","hashOfConfig":"15"},{"size":1036,"mtime":1610031658245,"results":"21","hashOfConfig":"15"},{"size":1444,"mtime":1610292703336,"results":"22","hashOfConfig":"15"},{"size":1516,"mtime":1610293301754,"results":"23","hashOfConfig":"15"},{"size":709,"mtime":1610084541489,"results":"24","hashOfConfig":"15"},{"size":1350,"mtime":1610089920031,"results":"25","hashOfConfig":"15"},{"size":599,"mtime":1610096777421,"results":"26","hashOfConfig":"15"},{"size":898,"mtime":1610091096571,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"10tqwk2",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/home/sriharsh/Desktop/task-management-application/src/index.tsx",[],["61","62"],"/home/sriharsh/Desktop/task-management-application/src/reportWebVitals.ts",[],"/home/sriharsh/Desktop/task-management-application/src/App.tsx",[],["63","64"],"/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/ProjectComponent.tsx",[],"/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/ProjectTopBarComponent/ProjectTopBarComponent.tsx",[],"/home/sriharsh/Desktop/task-management-application/src/Apps.tsx",["65","66","67"],"import \"./Apps.css\";\nimport React, { useContext } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Signin from \"./components/Signin/Signin\";\nimport Signup from \"./components/Signup/Signup\";\nimport \"./App.css\";\nimport { firebaseAuth } from \"./provider/AuthProvider\";\nimport ProjectComponent from \"./components/ProjectComponent/ProjectComponent\";\nimport TestComp from \"./components/TestComp\";\n\nfunction App() {\n  const { isAuthenticated, setIsAuthenticated } = useContext(firebaseAuth);\n\n  if (isAuthenticated.loading) {\n    return <div>Loading...</div>;\n  }\n  console.log(isAuthenticated);\n  return (\n    <>\n      <Switch>\n        {isAuthenticated.isAuthenticated ? (\n          <Route exact path=\"/\" render={() => <ProjectComponent />} />\n        ) : null}\n\n        <Route exact path=\"/signin\" component={Signin} />\n        <Route exact path=\"/signup\" component={Signup} />\n\n        <Route path=\"\" component={Signin} />\n      </Switch>\n      {/* <a href=\"/signup\">Signup</a> */}\n    </>\n  );\n}\n\nexport default App;\n","/home/sriharsh/Desktop/task-management-application/src/provider/AuthProvider.tsx",["68"],"import React, { useState, useEffect, useMemo } from \"react\";\nimport { auth } from \"../firebase/firebaseIndex\";\n\ninterface FirebaseContextType {\n  isAuthenticated: Authenticated;\n  setIsAuthenticated: Function;\n}\n\ninterface Authenticated {\n  loading: Boolean;\n  isAuthenticated: Boolean;\n}\n\nexport const firebaseAuth = React.createContext({} as FirebaseContextType);\n\nconst AuthProvider = (props: any) => {\n  const [isAuthenticated, setIsAuthenticated] = useState({\n    loading: true,\n    isAuthenticated: false,\n  } as Authenticated);\n\n  useEffect(() => {\n    auth().onAuthStateChanged((user) => {\n      if (user) {\n        setIsAuthenticated({\n          loading: false,\n          isAuthenticated: true,\n        });\n      } else {\n        setIsAuthenticated({\n          loading: false,\n          isAuthenticated: false,\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <firebaseAuth.Provider value={{ isAuthenticated, setIsAuthenticated }}>\n      {props.children}\n    </firebaseAuth.Provider>\n  );\n};\n\nexport default AuthProvider;\n","/home/sriharsh/Desktop/task-management-application/src/components/Signin/Signin.tsx",["69","70","71"],"/home/sriharsh/Desktop/task-management-application/src/components/Signup/Signup.tsx",["72","73","74"],"/home/sriharsh/Desktop/task-management-application/src/firebase/firebaseIndex.tsx",[],"/home/sriharsh/Desktop/task-management-application/src/components/TestComp.tsx",["75"],"import React from \"react\";\nimport { firestoreDB } from \"../firebase/firebaseIndex\";\nimport firebase from \"firebase\";\nfunction TestComp() {\n  console.log(firestoreDB, \"firestoreDB\");\n\n  firestoreDB\n    .collection(\"card\")\n    .add({\n      firstName: \"tom\",\n      lastName: \"Hanks\",\n      emailID: \"sample@gmail.com\",\n    })\n    .then((docRef) => {\n      console.log(docRef, \"docRef\");\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n\n  firestoreDB\n    .collection(\"card\")\n    .doc(\"ID1\")\n    .set({\n      firstName: \"Tom\",\n      lastName: \"Hanks\",\n      emailID: \"willsmith@gmail.com\",\n    })\n    .then(() => {\n      console.log(\"added to firestoreDB\");\n    })\n    .catch((error) => {\n      console.log(\"Error adding to firestoreDB\", error);\n    });\n\n  firestoreDB\n    .collection(\"card\")\n    .get()\n    .then((querySnapshot) => {\n      querySnapshot.forEach((doc) => {\n        console.log(`${doc.id} ${doc.data()}`);\n      });\n    });\n\n  return (\n    <div>\n      <h1>Test Component</h1>\n    </div>\n  );\n}\n\nexport default TestComp;\n\nexport const addTofirestoreDb = () => {\n  firestoreDB\n    .collection(\"card\")\n    .doc(\"ID\")\n    .set({\n      caption: \"new caprion\",\n    })\n    .then(() => {\n      console.log(\"added to firestoreDB\");\n    })\n    .catch((error) => {\n      console.log(\"Error adding to firestoreDB\", error);\n    });\n};\n",["76","77"],"/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/CardComponent/CardComponent.tsx",["78"],"import React, { useState } from \"react\";\nimport \"./CardComponent.css\";\nimport \"./CaptionComponent/CaptionComponent\";\nimport CaptionComponent from \"./CaptionComponent/CaptionComponent\";\n\nfunction CardComponent() {\n  const [addCard, setAddCard] = useState(0);\n  const handleClick = () => {\n    setAddCard(1);\n  };\n  return (\n    <>\n      <div className=\"card-component\">\n        Card\n        <CaptionComponent />\n        {addCard != 1 ? <button onClick={handleClick}>Add Card</button> : null}\n      </div>\n      {addCard === 1 ? <CardComponent /> : null}\n    </>\n  );\n}\n\nexport default CardComponent;\n","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/CardComponent/CaptionComponent/CaptionComponent.tsx",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"79","replacedBy":"83"},{"ruleId":"81","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":3,"column":25,"nodeType":"87","messageId":"88","endLine":3,"endColumn":33},{"ruleId":"85","severity":1,"message":"89","line":9,"column":8,"nodeType":"87","messageId":"88","endLine":9,"endColumn":16},{"ruleId":"85","severity":1,"message":"90","line":12,"column":28,"nodeType":"87","messageId":"88","endLine":12,"endColumn":46},{"ruleId":"85","severity":1,"message":"91","line":1,"column":38,"nodeType":"87","messageId":"88","endLine":1,"endColumn":45},{"ruleId":"85","severity":1,"message":"92","line":7,"column":11,"nodeType":"87","messageId":"88","endLine":7,"endColumn":26},{"ruleId":"85","severity":1,"message":"90","line":7,"column":28,"nodeType":"87","messageId":"88","endLine":7,"endColumn":46},{"ruleId":"93","severity":1,"message":"94","line":43,"column":9,"nodeType":"95","endLine":47,"endColumn":10},{"ruleId":"85","severity":1,"message":"92","line":8,"column":11,"nodeType":"87","messageId":"88","endLine":8,"endColumn":26},{"ruleId":"85","severity":1,"message":"90","line":8,"column":28,"nodeType":"87","messageId":"88","endLine":8,"endColumn":46},{"ruleId":"93","severity":1,"message":"94","line":42,"column":9,"nodeType":"95","endLine":46,"endColumn":10},{"ruleId":"85","severity":1,"message":"96","line":3,"column":8,"nodeType":"87","messageId":"88","endLine":3,"endColumn":16},{"ruleId":"79","replacedBy":"97"},{"ruleId":"81","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":16,"column":18,"nodeType":"101","messageId":"102","endLine":16,"endColumn":20},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],["103"],["104"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'TestComp' is defined but never used.","'setIsAuthenticated' is assigned a value but never used.","'useMemo' is defined but never used.","'isAuthenticated' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'firebase' is defined but never used.",["103"],["104"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]