[{"/home/sriharsh/Desktop/task-management-application/src/index.tsx":"1","/home/sriharsh/Desktop/task-management-application/src/reportWebVitals.ts":"2","/home/sriharsh/Desktop/task-management-application/src/App.tsx":"3","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/ProjectComponent.tsx":"4","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/ProjectTopBarComponent/ProjectTopBarComponent.tsx":"5","/home/sriharsh/Desktop/task-management-application/src/Apps.tsx":"6","/home/sriharsh/Desktop/task-management-application/src/provider/AuthProvider.tsx":"7","/home/sriharsh/Desktop/task-management-application/src/components/Signin/Signin.tsx":"8","/home/sriharsh/Desktop/task-management-application/src/components/Signup/Signup.tsx":"9","/home/sriharsh/Desktop/task-management-application/src/firebase/firebaseIndex.tsx":"10","/home/sriharsh/Desktop/task-management-application/src/components/TestComp.tsx":"11","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/CardComponent/CardComponent.tsx":"12","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/CardComponent/CaptionComponent/CaptionComponent.tsx":"13","/home/sriharsh/Desktop/task-management-application/src/Redux/Reducers/rootReducer.tsx":"14","/home/sriharsh/Desktop/task-management-application/src/Redux/store.tsx":"15","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/CardCreator/CardCreator.tsx":"16","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/StatusCol/StatusCol.tsx":"17","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/Navbar/Navbar.tsx":"18"},{"size":825,"mtime":1610513297920,"results":"19","hashOfConfig":"20"},{"size":425,"mtime":1609910416367,"results":"21","hashOfConfig":"20"},{"size":247,"mtime":1609913279717,"results":"22","hashOfConfig":"20"},{"size":675,"mtime":1610521733308,"results":"23","hashOfConfig":"20"},{"size":420,"mtime":1610519391827,"results":"24","hashOfConfig":"20"},{"size":1006,"mtime":1610513789596,"results":"25","hashOfConfig":"20"},{"size":1036,"mtime":1610031658245,"results":"26","hashOfConfig":"20"},{"size":1444,"mtime":1610292703336,"results":"27","hashOfConfig":"20"},{"size":1516,"mtime":1610293301754,"results":"28","hashOfConfig":"20"},{"size":1042,"mtime":1610344093793,"results":"29","hashOfConfig":"20"},{"size":1350,"mtime":1610089920031,"results":"30","hashOfConfig":"20"},{"size":1315,"mtime":1610517352137,"results":"31","hashOfConfig":"20"},{"size":1019,"mtime":1610375945235,"results":"32","hashOfConfig":"20"},{"size":196,"mtime":1610341924038,"results":"33","hashOfConfig":"20"},{"size":188,"mtime":1610342777396,"results":"34","hashOfConfig":"20"},{"size":1567,"mtime":1610515686329,"results":"35","hashOfConfig":"20"},{"size":1607,"mtime":1610516001028,"results":"36","hashOfConfig":"20"},{"size":2773,"mtime":1610521308165,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"10tqwk2",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"40"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/sriharsh/Desktop/task-management-application/src/index.tsx",[],["85","86"],"/home/sriharsh/Desktop/task-management-application/src/reportWebVitals.ts",[],"/home/sriharsh/Desktop/task-management-application/src/App.tsx",[],["87","88"],"/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/ProjectComponent.tsx",[],"/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/ProjectTopBarComponent/ProjectTopBarComponent.tsx",["89"],"/home/sriharsh/Desktop/task-management-application/src/Apps.tsx",["90","91"],"import \"./Apps.css\";\nimport React, { useContext } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Signin from \"./components/Signin/Signin\";\nimport Signup from \"./components/Signup/Signup\";\nimport \"./App.css\";\nimport { firebaseAuth } from \"./provider/AuthProvider\";\nimport ProjectComponent from \"./components/ProjectComponent/ProjectComponent\";\n\nfunction App() {\n  const { isAuthenticated, setIsAuthenticated } = useContext(firebaseAuth);\n\n  if (isAuthenticated.loading) {\n    return <div>Loading...</div>;\n  }\n  console.log(isAuthenticated);\n  return (\n    <div>\n      <Switch>\n        {isAuthenticated.isAuthenticated ? (\n          <Route exact path=\"/\" render={() => <ProjectComponent />} />\n        ) : null}\n\n        <Route exact path=\"/signin\" component={Signin} />\n        <Route exact path=\"/signup\" component={Signup} />\n\n        <Route path=\"\" component={Signin} />\n      </Switch>\n      {/* <a href=\"/signup\">Signup</a> */}\n    </div>\n  );\n}\n\nexport default App;\n","/home/sriharsh/Desktop/task-management-application/src/provider/AuthProvider.tsx",["92"],"import React, { useState, useEffect, useMemo } from \"react\";\nimport { auth } from \"../firebase/firebaseIndex\";\n\ninterface FirebaseContextType {\n  isAuthenticated: Authenticated;\n  setIsAuthenticated: Function;\n}\n\ninterface Authenticated {\n  loading: Boolean;\n  isAuthenticated: Boolean;\n}\n\nexport const firebaseAuth = React.createContext({} as FirebaseContextType);\n\nconst AuthProvider = (props: any) => {\n  const [isAuthenticated, setIsAuthenticated] = useState({\n    loading: true,\n    isAuthenticated: false,\n  } as Authenticated);\n\n  useEffect(() => {\n    auth().onAuthStateChanged((user) => {\n      if (user) {\n        setIsAuthenticated({\n          loading: false,\n          isAuthenticated: true,\n        });\n      } else {\n        setIsAuthenticated({\n          loading: false,\n          isAuthenticated: false,\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <firebaseAuth.Provider value={{ isAuthenticated, setIsAuthenticated }}>\n      {props.children}\n    </firebaseAuth.Provider>\n  );\n};\n\nexport default AuthProvider;\n","/home/sriharsh/Desktop/task-management-application/src/components/Signin/Signin.tsx",["93","94","95"],"import \"./Signin.css\";\nimport React, { useContext, useState } from \"react\";\nimport { firebaseAuth } from \"../../provider/AuthProvider\";\nimport { auth } from \"../../firebase/firebaseIndex\";\n\nconst Signin = (props: any) => {\n  const { isAuthenticated, setIsAuthenticated } = useContext(firebaseAuth);\n  const [error, setError] = useState(null);\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    setError(null);\n    const { email, password } = e.target;\n    console.log(email.value, password.value);\n    auth()\n      .signInWithEmailAndPassword(email.value, password.value)\n      .then(() => {\n        props.history.push(\"/\");\n      })\n      .catch((error) => {\n        console.log(error);\n        setError(error.message);\n      });\n  };\n\n  return (\n    <div className=\"bg\">\n      <form className=\"signin\" onSubmit={handleSubmit}>\n        <h2 className=\"title\"> SignIn</h2>\n\n        <input className=\"input\" required name=\"email\" placeholder=\"email\" />\n        <input\n          className=\"input\"\n          required\n          name=\"password\"\n          placeholder=\"password\"\n          type=\"password\"\n        />\n        <button className=\"signin-button\" type=\"submit\">\n          Signin\n        </button>\n        {error || null}\n        <a\n          onClick={() => {\n            props.history.push(\"/signup\");\n          }}\n        >\n          Create new account?\n        </a>\n      </form>\n    </div>\n  );\n};\n\nexport default Signin;\n","/home/sriharsh/Desktop/task-management-application/src/components/Signup/Signup.tsx",["96","97","98"],"import \"./Signup.css\";\nimport React, { useContext, useState } from \"react\";\nimport { firebaseAuth } from \"../../provider/AuthProvider\";\nimport { withRouter } from \"react-router-dom\";\nimport { auth } from \"../../firebase/firebaseIndex\";\n\nconst Signup = (props: any) => {\n  const { isAuthenticated, setIsAuthenticated } = useContext(firebaseAuth);\n  const [error, setError] = useState(null);\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    setError(null);\n    const { email, password } = e.target;\n    console.log(email.value, password.value);\n    auth()\n      .createUserWithEmailAndPassword(email.value, password.value)\n      .then(() => {\n        props.history.push(\"/\");\n      })\n      .catch((error) => {\n        console.log(error);\n        setError(error.message);\n      });\n  };\n  return (\n    <div className=\"bg\">\n      <form className=\"signup\" onSubmit={handleSubmit}>\n        <h2 className=\"title\">SignUp</h2>\n        <input className=\"input\" required name=\"email\" placeholder=\"email\" />\n        <input\n          className=\"input\"\n          required\n          name=\"password\"\n          placeholder=\"password\"\n          type=\"password\"\n        />\n        <button className=\"signup-button\" type=\"submit\">\n          SignUp\n        </button>\n        {error || null}\n        <a\n          onClick={() => {\n            props.history.push(\"/signin\");\n          }}\n        >\n          Already have an account, SignIn\n        </a>\n      </form>\n    </div>\n  );\n};\n\nexport default withRouter(Signup);\n","/home/sriharsh/Desktop/task-management-application/src/firebase/firebaseIndex.tsx",[],"/home/sriharsh/Desktop/task-management-application/src/components/TestComp.tsx",["99"],"import React from \"react\";\nimport { firestoreDB } from \"../firebase/firebaseIndex\";\nimport firebase from \"firebase\";\nfunction TestComp() {\n  console.log(firestoreDB, \"firestoreDB\");\n\n  firestoreDB\n    .collection(\"card\")\n    .add({\n      firstName: \"tom\",\n      lastName: \"Hanks\",\n      emailID: \"sample@gmail.com\",\n    })\n    .then((docRef) => {\n      console.log(docRef, \"docRef\");\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n\n  firestoreDB\n    .collection(\"card\")\n    .doc(\"ID1\")\n    .set({\n      firstName: \"Tom\",\n      lastName: \"Hanks\",\n      emailID: \"willsmith@gmail.com\",\n    })\n    .then(() => {\n      console.log(\"added to firestoreDB\");\n    })\n    .catch((error) => {\n      console.log(\"Error adding to firestoreDB\", error);\n    });\n\n  firestoreDB\n    .collection(\"card\")\n    .get()\n    .then((querySnapshot) => {\n      querySnapshot.forEach((doc) => {\n        console.log(`${doc.id} ${doc.data()}`);\n      });\n    });\n\n  return (\n    <div>\n      <h1>Test Component</h1>\n    </div>\n  );\n}\n\nexport default TestComp;\n\nexport const addTofirestoreDb = () => {\n  firestoreDB\n    .collection(\"card\")\n    .doc(\"ID\")\n    .set({\n      caption: \"new caprion\",\n    })\n    .then(() => {\n      console.log(\"added to firestoreDB\");\n    })\n    .catch((error) => {\n      console.log(\"Error adding to firestoreDB\", error);\n    });\n};\n",["100","101"],"/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/CardComponent/CardComponent.tsx",["102","103","104","105","106"],"import React, { useState } from \"react\";\nimport \"./CardComponent.css\";\nimport \"./CaptionComponent/CaptionComponent\";\nimport CaptionComponent from \"./CaptionComponent/CaptionComponent\";\nimport { FaCommentAlt } from \"react-icons/fa\";\nimport { AiOutlinePaperClip, AiFillFlag } from \"react-icons/ai\";\n\nfunction CardComponent(props: any) {\n  return (\n    <>\n      {/* <div className=\"card-component\">\n        <CaptionComponent />\n        {addCard != 1 ? <button onClick={handleClick}>Add Card</button> : null}\n      </div>\n      {addCard === 1 ? <CardComponent /> : null} */}\n\n      <div className=\"card-component\">\n        {/* <CaptionComponent />  */}\n        <div className=\"card-top-bar\">\n          <h5>Tag</h5>\n          <div>...</div>\n        </div>\n        <p>{props.caption} </p>\n        <div className=\"icons-bar\">\n          <a className=\"icon\" href=\"\">\n            <AiFillFlag />\n            <span className=\"icon-info\">12 Jan</span>\n          </a>\n          <a className=\"icon\" href=\"\">\n            <FaCommentAlt />\n            <span className=\"icon-info\">4</span>\n          </a>\n          <a className=\"icon\" href=\"\">\n            <AiOutlinePaperClip className=\"icon\" />\n            <span className=\"icon-info\">2</span>\n          </a>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default CardComponent;\n","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/CardComponent/CaptionComponent/CaptionComponent.tsx",["107","108"],"import React, { useState } from \"react\";\nimport \"./CaptionComponent.css\";\n// import { firestoreDB } from \"../../../../firebase/firebaseIndex\";\nimport { useFirestore } from \"react-redux-firebase\";\nfunction CaptionComponent() {\n  const [caption, setCaption] = useState(\"\");\n  const firestore = useFirestore();\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    console.log(caption, \"caption\");\n    // firestoreDB\n    firestore\n      .collection(\"card\")\n      .doc(caption)\n      .set({\n        caption: caption,\n      })\n      .then(() => {\n        console.log(\"added to firestoreDB\");\n      })\n      .catch((error) => {\n        console.log(\"Error adding to firestoreDB\", error);\n      });\n  };\n  return (\n    <div>\n      {/* <form onSubmit={handleSubmit}>\n        <input\n          className=\"caption\"\n          type=\"text\"\n          onChange={(e) => setCaption(e.target.value)}\n        />\n        <input type=\"submit\" value=\"Submit\" />\n      </form> */}\n    </div>\n  );\n}\n\nexport default CaptionComponent;\n","/home/sriharsh/Desktop/task-management-application/src/Redux/Reducers/rootReducer.tsx",[],"/home/sriharsh/Desktop/task-management-application/src/Redux/store.tsx",[],"/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/CardCreator/CardCreator.tsx",[],"/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/StatusCol/StatusCol.tsx",["109","110"],"import Reac, { useState, useEffect } from \"react\";\nimport \"./StatusCol.css\";\nimport CardCreator from \"../CardCreator/CardCreator\";\nimport CardComponent from \"../CardComponent/CardComponent\";\nimport { useFirestore } from \"react-redux-firebase\";\n\nfunction StatusCol(props: any) {\n  const [show, setShow] = useState(false);\n  const [firestoreData, setFirestoreData] = useState<any>([]);\n  const [loading, setLoading] = useState(true);\n\n  const firestore = useFirestore();\n\n  const fetchCaptions = () => {\n    const final: Array<any> = [];\n\n    //   firestore.collection(\"card\").onSnapshot((e) => {\n    //     console.log(e.docs);\n    //   });\n\n    firestore\n      .collection(\"card\")\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          final.push([doc.data().caption, doc.data().status]);\n          console.log(final);\n        });\n        setFirestoreData(final);\n        setLoading(false);\n      })\n      .catch((e) => {\n        console.log(\"error=\", e);\n      });\n  };\n\n  useEffect(() => {\n    fetchCaptions();\n  }, []);\n  return (\n    <div className=\"statuscol-col\">\n      <h4>{props.status}</h4>\n\n      <div className=\"card-container\">\n        {loading === true\n          ? \"loading...\"\n          : firestoreData.map((item: any) => {\n              return item[1] === props.status ? (\n                <CardComponent caption={item[0]} />\n              ) : null;\n            })}\n      </div>\n\n      <div className=\"add-card\" onClick={() => setShow(true)}>\n        {show ? <CardCreator /> : null}+ Add Card\n      </div>\n    </div>\n  );\n}\n\nexport default StatusCol;\n","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/Navbar/Navbar.tsx",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"111","replacedBy":"115"},{"ruleId":"113","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":14},{"ruleId":"117","severity":1,"message":"121","line":3,"column":25,"nodeType":"119","messageId":"120","endLine":3,"endColumn":33},{"ruleId":"117","severity":1,"message":"122","line":11,"column":28,"nodeType":"119","messageId":"120","endLine":11,"endColumn":46},{"ruleId":"117","severity":1,"message":"123","line":1,"column":38,"nodeType":"119","messageId":"120","endLine":1,"endColumn":45},{"ruleId":"117","severity":1,"message":"124","line":7,"column":11,"nodeType":"119","messageId":"120","endLine":7,"endColumn":26},{"ruleId":"117","severity":1,"message":"122","line":7,"column":28,"nodeType":"119","messageId":"120","endLine":7,"endColumn":46},{"ruleId":"125","severity":1,"message":"126","line":43,"column":9,"nodeType":"127","endLine":47,"endColumn":10},{"ruleId":"117","severity":1,"message":"124","line":8,"column":11,"nodeType":"119","messageId":"120","endLine":8,"endColumn":26},{"ruleId":"117","severity":1,"message":"122","line":8,"column":28,"nodeType":"119","messageId":"120","endLine":8,"endColumn":46},{"ruleId":"125","severity":1,"message":"126","line":42,"column":9,"nodeType":"127","endLine":46,"endColumn":10},{"ruleId":"117","severity":1,"message":"128","line":3,"column":8,"nodeType":"119","messageId":"120","endLine":3,"endColumn":16},{"ruleId":"111","replacedBy":"129"},{"ruleId":"113","replacedBy":"130"},{"ruleId":"117","severity":1,"message":"131","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"117","severity":1,"message":"132","line":4,"column":8,"nodeType":"119","messageId":"120","endLine":4,"endColumn":24},{"ruleId":"125","severity":1,"message":"133","line":25,"column":11,"nodeType":"127","endLine":25,"endColumn":39},{"ruleId":"125","severity":1,"message":"133","line":29,"column":11,"nodeType":"127","endLine":29,"endColumn":39},{"ruleId":"125","severity":1,"message":"133","line":33,"column":11,"nodeType":"127","endLine":33,"endColumn":39},{"ruleId":"117","severity":1,"message":"134","line":6,"column":19,"nodeType":"119","messageId":"120","endLine":6,"endColumn":29},{"ruleId":"117","severity":1,"message":"135","line":8,"column":9,"nodeType":"119","messageId":"120","endLine":8,"endColumn":21},{"ruleId":"117","severity":1,"message":"136","line":1,"column":8,"nodeType":"119","messageId":"120","endLine":1,"endColumn":12},{"ruleId":"137","severity":1,"message":"138","line":39,"column":6,"nodeType":"139","endLine":39,"endColumn":8,"suggestions":"140"},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],["141"],["142"],"@typescript-eslint/no-unused-vars","'auth' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'setIsAuthenticated' is assigned a value but never used.","'useMemo' is defined but never used.","'isAuthenticated' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'firebase' is defined but never used.",["141"],["142"],"'useState' is defined but never used.","'CaptionComponent' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'setCaption' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'Reac' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCaptions'. Either include it or remove the dependency array.","ArrayExpression",["143"],"no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},"Update the dependencies array to be: [fetchCaptions]",{"range":"146","text":"147"},[1060,1062],"[fetchCaptions]"]