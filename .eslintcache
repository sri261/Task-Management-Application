[{"/home/sriharsh/Desktop/task-management-application/src/index.tsx":"1","/home/sriharsh/Desktop/task-management-application/src/reportWebVitals.ts":"2","/home/sriharsh/Desktop/task-management-application/src/App.tsx":"3","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/ProjectComponent.tsx":"4","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/ProjectTopBarComponent/ProjectTopBarComponent.tsx":"5","/home/sriharsh/Desktop/task-management-application/src/Apps.tsx":"6","/home/sriharsh/Desktop/task-management-application/src/provider/AuthProvider.tsx":"7","/home/sriharsh/Desktop/task-management-application/src/components/Signin/Signin.tsx":"8","/home/sriharsh/Desktop/task-management-application/src/components/Signup/Signup.tsx":"9","/home/sriharsh/Desktop/task-management-application/src/firebase/firebaseIndex.tsx":"10","/home/sriharsh/Desktop/task-management-application/src/components/TestComp.tsx":"11","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/CardComponent/CardComponent.tsx":"12","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/CardComponent/CaptionComponent/CaptionComponent.tsx":"13"},{"size":481,"mtime":1610033694076,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":1609910416367,"results":"16","hashOfConfig":"15"},{"size":247,"mtime":1609913279717,"results":"17","hashOfConfig":"15"},{"size":396,"mtime":1610095794341,"results":"18","hashOfConfig":"15"},{"size":433,"mtime":1610033669828,"results":"19","hashOfConfig":"15"},{"size":1025,"mtime":1610092070455,"results":"20","hashOfConfig":"15"},{"size":1036,"mtime":1610031658245,"results":"21","hashOfConfig":"15"},{"size":1168,"mtime":1610033613808,"results":"22","hashOfConfig":"15"},{"size":1230,"mtime":1610033599800,"results":"23","hashOfConfig":"15"},{"size":709,"mtime":1610084541489,"results":"24","hashOfConfig":"15"},{"size":1350,"mtime":1610089920031,"results":"25","hashOfConfig":"15"},{"size":599,"mtime":1610096777421,"results":"26","hashOfConfig":"15"},{"size":898,"mtime":1610091096571,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"10tqwk2",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/home/sriharsh/Desktop/task-management-application/src/index.tsx",[],["61","62"],"/home/sriharsh/Desktop/task-management-application/src/reportWebVitals.ts",[],"/home/sriharsh/Desktop/task-management-application/src/App.tsx",[],["63","64"],"/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/ProjectComponent.tsx",[],"/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/ProjectTopBarComponent/ProjectTopBarComponent.tsx",[],"/home/sriharsh/Desktop/task-management-application/src/Apps.tsx",["65","66","67"],"/home/sriharsh/Desktop/task-management-application/src/provider/AuthProvider.tsx",["68"],"import React, { useState, useEffect, useMemo } from \"react\";\nimport { auth } from \"../firebase/firebaseIndex\";\n\ninterface FirebaseContextType {\n  isAuthenticated: Authenticated;\n  setIsAuthenticated: Function;\n}\n\ninterface Authenticated {\n  loading: Boolean;\n  isAuthenticated: Boolean;\n}\n\nexport const firebaseAuth = React.createContext({} as FirebaseContextType);\n\nconst AuthProvider = (props: any) => {\n  const [isAuthenticated, setIsAuthenticated] = useState({\n    loading: true,\n    isAuthenticated: false,\n  } as Authenticated);\n\n  useEffect(() => {\n    auth().onAuthStateChanged((user) => {\n      if (user) {\n        setIsAuthenticated({\n          loading: false,\n          isAuthenticated: true,\n        });\n      } else {\n        setIsAuthenticated({\n          loading: false,\n          isAuthenticated: false,\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <firebaseAuth.Provider value={{ isAuthenticated, setIsAuthenticated }}>\n      {props.children}\n    </firebaseAuth.Provider>\n  );\n};\n\nexport default AuthProvider;\n","/home/sriharsh/Desktop/task-management-application/src/components/Signin/Signin.tsx",["69","70"],"import React, { useContext, useState } from \"react\";\nimport { firebaseAuth } from \"../../provider/AuthProvider\";\nimport { auth } from \"../../firebase/firebaseIndex\";\n\nconst Signin = (props: any) => {\n  const { isAuthenticated, setIsAuthenticated } = useContext(firebaseAuth);\n  const [error, setError] = useState(null);\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    setError(null);\n    const { email, password } = e.target;\n    console.log(email.value, password.value);\n    auth()\n      .signInWithEmailAndPassword(email.value, password.value)\n      .then(() => {\n        props.history.push(\"/\");\n      })\n      .catch((error) => {\n        console.log(error);\n        setError(error.message);\n      });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      Signin\n      <input required name=\"email\" placeholder=\"email\" />\n      <input required name=\"password\" placeholder=\"password\" type=\"password\" />\n      <button type=\"submit\">signin</button>\n      {error || null}\n      <button\n        onClick={() => {\n          props.history.push(\"/signup\");\n        }}\n      >\n        Sign Up?\n      </button>\n    </form>\n  );\n};\n\nexport default Signin;\n","/home/sriharsh/Desktop/task-management-application/src/components/Signup/Signup.tsx",["71","72"],"import React, { useContext, useState } from \"react\";\nimport { firebaseAuth } from \"../../provider/AuthProvider\";\nimport { withRouter } from \"react-router-dom\";\nimport { auth } from \"../../firebase/firebaseIndex\";\n\nconst Signup = (props: any) => {\n  const { isAuthenticated, setIsAuthenticated } = useContext(firebaseAuth);\n  const [error, setError] = useState(null);\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    setError(null);\n    const { email, password } = e.target;\n    console.log(email.value, password.value);\n    auth()\n      .createUserWithEmailAndPassword(email.value, password.value)\n      .then(() => {\n        props.history.push(\"/\");\n      })\n      .catch((error) => {\n        console.log(error);\n        setError(error.message);\n      });\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      SignUp\n      <input required name=\"email\" placeholder=\"email\" />\n      <input required name=\"password\" placeholder=\"password\" type=\"password\" />\n      <button type=\"submit\">SignUp</button>\n      {error || null}\n      <button\n        onClick={() => {\n          props.history.push(\"/signin\");\n        }}\n      >\n        Sign In?\n      </button>\n    </form>\n  );\n};\n\nexport default withRouter(Signup);\n","/home/sriharsh/Desktop/task-management-application/src/firebase/firebaseIndex.tsx",[],"/home/sriharsh/Desktop/task-management-application/src/components/TestComp.tsx",["73"],"import React from \"react\";\nimport { firestoreDB } from \"../firebase/firebaseIndex\";\nimport firebase from \"firebase\";\nfunction TestComp() {\n  console.log(firestoreDB, \"firestoreDB\");\n\n  firestoreDB\n    .collection(\"card\")\n    .add({\n      firstName: \"tom\",\n      lastName: \"Hanks\",\n      emailID: \"sample@gmail.com\",\n    })\n    .then((docRef) => {\n      console.log(docRef, \"docRef\");\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n\n  firestoreDB\n    .collection(\"card\")\n    .doc(\"ID1\")\n    .set({\n      firstName: \"Tom\",\n      lastName: \"Hanks\",\n      emailID: \"willsmith@gmail.com\",\n    })\n    .then(() => {\n      console.log(\"added to firestoreDB\");\n    })\n    .catch((error) => {\n      console.log(\"Error adding to firestoreDB\", error);\n    });\n\n  firestoreDB\n    .collection(\"card\")\n    .get()\n    .then((querySnapshot) => {\n      querySnapshot.forEach((doc) => {\n        console.log(`${doc.id} ${doc.data()}`);\n      });\n    });\n\n  return (\n    <div>\n      <h1>Test Component</h1>\n    </div>\n  );\n}\n\nexport default TestComp;\n\nexport const addTofirestoreDb = () => {\n  firestoreDB\n    .collection(\"card\")\n    .doc(\"ID\")\n    .set({\n      caption: \"new caprion\",\n    })\n    .then(() => {\n      console.log(\"added to firestoreDB\");\n    })\n    .catch((error) => {\n      console.log(\"Error adding to firestoreDB\", error);\n    });\n};\n",["74","75"],"/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/CardComponent/CardComponent.tsx",["76"],"/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/CardComponent/CaptionComponent/CaptionComponent.tsx",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"77","replacedBy":"81"},{"ruleId":"79","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":2,"column":25,"nodeType":"85","messageId":"86","endLine":2,"endColumn":33},{"ruleId":"83","severity":1,"message":"87","line":8,"column":8,"nodeType":"85","messageId":"86","endLine":8,"endColumn":16},{"ruleId":"83","severity":1,"message":"88","line":11,"column":28,"nodeType":"85","messageId":"86","endLine":11,"endColumn":46},{"ruleId":"83","severity":1,"message":"89","line":1,"column":38,"nodeType":"85","messageId":"86","endLine":1,"endColumn":45},{"ruleId":"83","severity":1,"message":"90","line":6,"column":11,"nodeType":"85","messageId":"86","endLine":6,"endColumn":26},{"ruleId":"83","severity":1,"message":"88","line":6,"column":28,"nodeType":"85","messageId":"86","endLine":6,"endColumn":46},{"ruleId":"83","severity":1,"message":"90","line":7,"column":11,"nodeType":"85","messageId":"86","endLine":7,"endColumn":26},{"ruleId":"83","severity":1,"message":"88","line":7,"column":28,"nodeType":"85","messageId":"86","endLine":7,"endColumn":46},{"ruleId":"83","severity":1,"message":"91","line":3,"column":8,"nodeType":"85","messageId":"86","endLine":3,"endColumn":16},{"ruleId":"77","replacedBy":"92"},{"ruleId":"79","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":16,"column":18,"nodeType":"96","messageId":"97","endLine":16,"endColumn":20},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],["98"],["99"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'TestComp' is defined but never used.","'setIsAuthenticated' is assigned a value but never used.","'useMemo' is defined but never used.","'isAuthenticated' is assigned a value but never used.","'firebase' is defined but never used.",["98"],["99"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]