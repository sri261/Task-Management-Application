[{"/home/sriharsh/Desktop/task-management-application/src/index.tsx":"1","/home/sriharsh/Desktop/task-management-application/src/reportWebVitals.ts":"2","/home/sriharsh/Desktop/task-management-application/src/App.tsx":"3","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/ProjectComponent.tsx":"4","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/ProjectTopBarComponent/ProjectTopBarComponent.tsx":"5","/home/sriharsh/Desktop/task-management-application/src/Apps.tsx":"6","/home/sriharsh/Desktop/task-management-application/src/provider/AuthProvider.tsx":"7","/home/sriharsh/Desktop/task-management-application/src/components/Signin/Signin.tsx":"8","/home/sriharsh/Desktop/task-management-application/src/components/Signup/Signup.tsx":"9","/home/sriharsh/Desktop/task-management-application/src/firebase/firebaseIndex.tsx":"10","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/CardComponent/CardComponent.tsx":"11","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/CardComponent/CaptionComponent/CaptionComponent.tsx":"12","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/CardCreator/CardCreator.tsx":"13","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/StatusCol/StatusCol.tsx":"14","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/Navbar/Navbar.tsx":"15","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/Tag/Tag.tsx":"16","/home/sriharsh/Desktop/task-management-application/src/components/Modal/Modal.tsx":"17","/home/sriharsh/Desktop/task-management-application/src/store/store.ts":"18","/home/sriharsh/Desktop/task-management-application/src/components/Modal/CommentsModal/CommentsModal.tsx":"19","/home/sriharsh/Desktop/task-management-application/src/store/types.ts":"20","/home/sriharsh/Desktop/task-management-application/src/Testing/Test.tsx":"21","/home/sriharsh/Desktop/task-management-application/src/store/actions/actions.ts":"22","/home/sriharsh/Desktop/task-management-application/src/store/reducers/Reducer.ts":"23","/home/sriharsh/Desktop/task-management-application/src/store/reducers/uiReducer.ts":"24","/home/sriharsh/Desktop/task-management-application/src/store/actions/commentsAction.ts":"25","/home/sriharsh/Desktop/task-management-application/src/store/reducers/commentsReducer.ts":"26","/home/sriharsh/Desktop/task-management-application/src/store/actions/CommentLoadingAction.ts":"27"},{"size":666,"mtime":1611564406857,"results":"28","hashOfConfig":"29"},{"size":425,"mtime":1609910416367,"results":"30","hashOfConfig":"29"},{"size":247,"mtime":1609913279717,"results":"31","hashOfConfig":"29"},{"size":1357,"mtime":1611674875334,"results":"32","hashOfConfig":"29"},{"size":210,"mtime":1610538596694,"results":"33","hashOfConfig":"29"},{"size":1402,"mtime":1611464793132,"results":"34","hashOfConfig":"29"},{"size":1092,"mtime":1611562586648,"results":"35","hashOfConfig":"29"},{"size":1589,"mtime":1611674963283,"results":"36","hashOfConfig":"29"},{"size":1516,"mtime":1610293301754,"results":"37","hashOfConfig":"29"},{"size":768,"mtime":1611664690275,"results":"38","hashOfConfig":"29"},{"size":4640,"mtime":1611678729451,"results":"39","hashOfConfig":"29"},{"size":1019,"mtime":1610375945235,"results":"40","hashOfConfig":"29"},{"size":3638,"mtime":1611672282826,"results":"41","hashOfConfig":"29"},{"size":2647,"mtime":1611672550317,"results":"42","hashOfConfig":"29"},{"size":2773,"mtime":1611674982583,"results":"43","hashOfConfig":"29"},{"size":712,"mtime":1610691924789,"results":"44","hashOfConfig":"29"},{"size":1029,"mtime":1611068181265,"results":"45","hashOfConfig":"29"},{"size":478,"mtime":1611674980819,"results":"46","hashOfConfig":"29"},{"size":3335,"mtime":1611669401800,"results":"47","hashOfConfig":"29"},{"size":1336,"mtime":1611675040843,"results":"48","hashOfConfig":"29"},{"size":487,"mtime":1611674882926,"results":"49","hashOfConfig":"29"},{"size":3596,"mtime":1611675319985,"results":"50","hashOfConfig":"29"},{"size":663,"mtime":1611673796156,"results":"51","hashOfConfig":"29"},{"size":784,"mtime":1611675052427,"results":"52","hashOfConfig":"29"},{"size":1819,"mtime":1611666885887,"results":"53","hashOfConfig":"29"},{"size":471,"mtime":1611675092655,"results":"54","hashOfConfig":"29"},{"size":353,"mtime":1611574131045,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"10tqwk2",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/home/sriharsh/Desktop/task-management-application/src/index.tsx",[],["123","124"],"/home/sriharsh/Desktop/task-management-application/src/reportWebVitals.ts",[],"/home/sriharsh/Desktop/task-management-application/src/App.tsx",[],["125","126"],"/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/ProjectComponent.tsx",["127","128"],"import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport ProjectTopBarComponent from \"./ProjectTopBarComponent/ProjectTopBarComponent\";\nimport \"./ProjectComponent.css\";\nimport StatusCol from \"./StatusCol/StatusCol\";\nimport Navbar from \"./Navbar/Navbar\";\nimport CommentsModal from \"../Modal/CommentsModal/CommentsModal\";\nimport { UIState } from \"../../store/types\";\nimport { fireDataToStoreThunkActionMethod } from \"../../store/actions/actions\";\n\nfunction ProjectComponent() {\n  const uiState = useSelector<any>((state) => state.uiReducer.show);\n  const dispatch = useDispatch();\n  dispatch(fireDataToStoreThunkActionMethod());\n\n  return (\n    <>\n      <div style={uiState ? { filter: \"blur(2px)\" } : {}}>\n        <div className=\"project-component\">\n          <Navbar />\n          <div className=\"project-component-sub\">\n            <ProjectTopBarComponent />\n            <div className=\"status-cols\">\n              <StatusCol status=\"Task Ready\" />\n              <StatusCol status=\"In Progress\" />\n              <StatusCol status=\"Needs Review\" />\n              <StatusCol status=\"Done\" />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"project-component-modal\">\n        {uiState ? <CommentsModal /> : null}\n      </div>\n    </>\n  );\n}\n\nexport default ProjectComponent;\n","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/ProjectTopBarComponent/ProjectTopBarComponent.tsx",[],"/home/sriharsh/Desktop/task-management-application/src/Apps.tsx",["129","130"],"import \"./Apps.css\";\nimport React, { useContext } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Signin from \"./components/Signin/Signin\";\nimport Signup from \"./components/Signup/Signup\";\nimport \"./App.css\";\nimport { firebaseAuth } from \"./provider/AuthProvider\";\nimport ProjectComponent from \"./components/ProjectComponent/ProjectComponent\";\nfunction App() {\n  const { isAuthenticated, setIsAuthenticated } = useContext(firebaseAuth);\n\n  if (isAuthenticated.loading) {\n    return <div>Loading ...</div>;\n  }\n  console.log(isAuthenticated);\n  return (\n    <div>\n      <Switch>\n        {/*\n          REVIEW: when you are not logged in redirect to login page. This code mounts project component and signin page on same path.\n          do something like\n          isLoggedIn === true ? (\n          // render project component\n        ) : (\n          //redirect to signin page\n          <Redirect to={{ pathname: \"/login\", state: { from: location } }} />\n        )\n        */}\n        {isAuthenticated.isAuthenticated ? (\n          <Route exact path=\"/\" render={() => <ProjectComponent />} />\n        ) : null}\n\n        <Route exact path=\"/signin\" component={Signin} />\n        <Route exact path=\"/signup\" component={Signup} />\n\n        <Route path=\"\" component={Signin} />\n      </Switch>\n      {/* <a href=\"/signup\">Signup</a> */}\n    </div>\n  );\n}\n\nexport default App;\n","/home/sriharsh/Desktop/task-management-application/src/provider/AuthProvider.tsx",["131"],"import React, { useState, useEffect, useMemo } from \"react\";\nimport { auth } from \"../firebase/firebaseIndex\";\n\ninterface FirebaseContextType {\n  isAuthenticated: Authenticated;\n  setIsAuthenticated: Function;\n}\n\ninterface Authenticated {\n  loading: Boolean;\n  isAuthenticated: Boolean;\n}\n\nexport const firebaseAuth = React.createContext({} as FirebaseContextType);\n\nconst AuthProvider = (props: any) => {\n  // Limit useState to create state for single variable\n  const [isAuthenticated, setIsAuthenticated] = useState({\n    loading: true,\n    isAuthenticated: false,\n  } as Authenticated);\n\n  useEffect(() => {\n    auth().onAuthStateChanged((user) => {\n      if (user) {\n        setIsAuthenticated({\n          loading: false,\n          isAuthenticated: true,\n        });\n      } else {\n        setIsAuthenticated({\n          loading: false,\n          isAuthenticated: false,\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <firebaseAuth.Provider value={{ isAuthenticated, setIsAuthenticated }}>\n      {props.children}\n    </firebaseAuth.Provider>\n  );\n};\n\nexport default AuthProvider;\n","/home/sriharsh/Desktop/task-management-application/src/components/Signin/Signin.tsx",["132","133","134","135","136"],"import \"./Signin.css\";\nimport React, { useContext, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { firebaseAuth } from \"../../provider/AuthProvider\";\nimport { auth } from \"../../firebase/firebaseIndex\";\nimport { setEmailActionMethod } from \"../../store/actions/actions\";\n\nconst Signin = (props: any) => {\n  const { isAuthenticated, setIsAuthenticated } = useContext(firebaseAuth);\n  const [error, setError] = useState(null);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    setError(null);\n    const { email, password } = e.target;\n    console.log(email.value, password.value);\n    auth()\n      .signInWithEmailAndPassword(email.value, password.value)\n      .then(() => {\n        props.history.push(\"/\");\n      })\n      .catch((error) => {\n        console.log(error);\n        setError(error.message);\n      });\n  };\n\n  return (\n    <div className=\"bg\">\n      <form className=\"signin\" onSubmit={handleSubmit}>\n        <h2 className=\"title\"> SignIn</h2>\n\n        <input className=\"input\" required name=\"email\" placeholder=\"email\" />\n        <input\n          className=\"input\"\n          required\n          name=\"password\"\n          placeholder=\"password\"\n          type=\"password\"\n        />\n        <button className=\"signin-button\" type=\"submit\">\n          Signin\n        </button>\n        {error || null}\n        <a\n          onClick={() => {\n            props.history.push(\"/signup\");\n          }}\n        >\n          Create new account?\n        </a>\n      </form>\n    </div>\n  );\n};\n\nexport default Signin;\n","/home/sriharsh/Desktop/task-management-application/src/components/Signup/Signup.tsx",["137","138","139"],"import \"./Signup.css\";\nimport React, { useContext, useState } from \"react\";\nimport { firebaseAuth } from \"../../provider/AuthProvider\";\nimport { withRouter } from \"react-router-dom\";\nimport { auth } from \"../../firebase/firebaseIndex\";\n\nconst Signup = (props: any) => {\n  const { isAuthenticated, setIsAuthenticated } = useContext(firebaseAuth);\n  const [error, setError] = useState(null);\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    setError(null);\n    const { email, password } = e.target;\n    console.log(email.value, password.value);\n    auth()\n      .createUserWithEmailAndPassword(email.value, password.value)\n      .then(() => {\n        props.history.push(\"/\");\n      })\n      .catch((error) => {\n        console.log(error);\n        setError(error.message);\n      });\n  };\n  return (\n    <div className=\"bg\">\n      <form className=\"signup\" onSubmit={handleSubmit}>\n        <h2 className=\"title\">SignUp</h2>\n        <input className=\"input\" required name=\"email\" placeholder=\"email\" />\n        <input\n          className=\"input\"\n          required\n          name=\"password\"\n          placeholder=\"password\"\n          type=\"password\"\n        />\n        <button className=\"signup-button\" type=\"submit\">\n          SignUp\n        </button>\n        {error || null}\n        <a\n          onClick={() => {\n            props.history.push(\"/signin\");\n          }}\n        >\n          Already have an account, SignIn\n        </a>\n      </form>\n    </div>\n  );\n};\n\nexport default withRouter(Signup);\n","/home/sriharsh/Desktop/task-management-application/src/firebase/firebaseIndex.tsx",["140"],"// Initialize Firebase\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/firestore\";\nimport \"firebase/functions\";\nimport { createFirestoreInstance } from \"redux-firestore\";\n\nvar firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTHDOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGEBUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n};\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth;\nexport const db = firebase.database();\nexport const firestoreDB = firebase.firestore();\n","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/CardComponent/CardComponent.tsx",["141","142","143"],"/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/CardComponent/CaptionComponent/CaptionComponent.tsx",["144","145"],"import React, { useState } from \"react\";\nimport \"./CaptionComponent.css\";\n// import { firestoreDB } from \"../../../../firebase/firebaseIndex\";\nimport { useFirestore } from \"react-redux-firebase\";\nfunction CaptionComponent() {\n  const [caption, setCaption] = useState(\"\");\n  const firestore = useFirestore();\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    console.log(caption, \"caption\");\n    // firestoreDB\n    firestore\n      .collection(\"card\")\n      .doc(caption)\n      .set({\n        caption: caption,\n      })\n      .then(() => {\n        console.log(\"added to firestoreDB\");\n      })\n      .catch((error) => {\n        console.log(\"Error adding to firestoreDB\", error);\n      });\n  };\n  return (\n    <div>\n      {/* <form onSubmit={handleSubmit}>\n        <input\n          className=\"caption\"\n          type=\"text\"\n          onChange={(e) => setCaption(e.target.value)}\n        />\n        <input type=\"submit\" value=\"Submit\" />\n      </form> */}\n    </div>\n  );\n}\n\nexport default CaptionComponent;\n","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/CardCreator/CardCreator.tsx",["146"],"import React, { useState } from \"react\";\nimport { useFirestore } from \"react-redux-firebase\";\nimport { AiOutlineClose } from \"react-icons/ai\";\nimport { firestoreDB } from \"../../../firebase/firebaseIndex\";\nimport { useDispatch } from \"react-redux\";\n\nimport \"./CardCreator.css\";\nimport { updateStore } from \"../../../store/actions/actions\";\n\nfunction CardCreator() {\n  const [caption, setCaption] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [tag, setTag] = useState(\"\");\n  const [show, setShow] = useState(false);\n  const dispatch = useDispatch();\n\n  // const firestore = useFirestore();\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    const timestamp = new Date().toISOString();\n    dispatch(\n      updateStore({\n        new12: {\n          caption: \"caption\",\n          status: \"status\",\n          tag: \"tag\",\n          timestamp: timestamp.toString(),\n        },\n      })\n    );\n\n    setShow(false);\n\n    // const timestampOnCard = timestamp.getDay();\n    // console.log(timestampOnCard);\n    firestoreDB\n      .collection(\"card\")\n      // .doc(caption)\n      .doc()\n      .set({\n        caption: caption,\n        timestamp: timestamp.toString(),\n        status: status,\n        tag: tag,\n        commentCount: 0,\n        pins: 0,\n      })\n      .then(() => {\n        console.log(\"added to firestoreDB\");\n      })\n      .catch((error) => {\n        console.log(\"Error adding to firestoreDB\", error);\n      });\n  };\n\n  return (\n    <div>\n      {show ? (\n        <div className=\"card-creator\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"cardcreator-top-bar\">\n              <h4>Create new Card</h4>\n              <div\n                className=\"cardcreator-top-bar-close\"\n                onClick={() => {\n                  setShow(false);\n                }}\n              >\n                <AiOutlineClose />\n              </div>\n            </div>\n            {/* =================== Input text box ========================== */}\n\n            <input\n              type=\"text\"\n              onChange={(e) => {\n                setCaption(e.target.value);\n              }}\n              placeholder=\"What is the new task?\"\n              required\n            />\n            {/* =================== Select task dropdown ========================== */}\n            <select\n              onChange={(e) => {\n                setStatus(e.target.value);\n              }}\n            >\n              <option>Select Task Progress</option>\n              <option value=\"Task Ready\">Task Ready</option>\n              <option value=\"In Progress\">In Progress</option>\n              <option value=\"Needs Review\">Needs Review</option>\n              <option value=\"Done\">Done</option>\n            </select>\n            {/* ==================== Select tag dropdown ========================= */}\n\n            <select\n              onChange={(e) => {\n                setTag(e.target.value);\n              }}\n            >\n              {/*\n                REVIEW: tags should be dynamic. use should be able to create new tags.\n              */}\n              <option>Select Task Tag</option>\n              <option value=\"UI Design\">UI Design</option>\n              <option value=\"Copywritng\">Copywritng</option>\n              <option value=\"Illustration\">Illustration</option>\n              <option value=\"Code\">Code</option>\n            </select>\n\n            <button type=\"submit\">\n              <h6>Done</h6>\n            </button>\n          </form>\n        </div>\n      ) : (\n        <div onClick={() => setShow(true)}>\"+ Add Card\"</div>\n      )}\n    </div>\n  );\n}\n\nexport default CardCreator;\n","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/StatusCol/StatusCol.tsx",["147","148","149","150"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport \"./StatusCol.css\";\nimport CardCreator from \"../CardCreator/CardCreator\";\nimport CardComponent from \"../CardComponent/CardComponent\";\nimport { firestoreDB } from \"../../../firebase/firebaseIndex\";\nimport { Task } from \"../../../store/types\";\n\nfunction StatusCol(props: any) {\n  const [firestoreData, setFirestoreData] = useState<any>([]);\n\n  // const fetchCaptions = () => {\n  //   const final: Array<any> = [];\n\n  //   firestoreDB.collection(\"card\").onSnapshot((querySnapshot) => {\n  //     querySnapshot.forEach((doc) => {\n  //       if (doc.data().status == props.status) {\n  //         final.push([\n  //           doc.data().caption,\n  //           doc.data().status,\n  //           doc.data().tag,\n  //           doc.data().timestamp,\n  //           doc.id,\n  //         ]);\n  //       }\n  //     });\n\n  //     setFirestoreData(final);\n  //     setLoading(false);\n  //   });\n  // };\n  // +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n  const storeData: any = useSelector<Task>((state) => state.Reducer);\n  const storeReady: any = useSelector<any>(\n    (state) => state.uiReducer.fireDataLoaded\n  );\n  const temp: any = useSelector<any>((state) => state.Reducer);\n  const final: Array<any> = [];\n  const fetchStoreData = () => {\n    // console.log(temp, \"temp\");\n    const entries: any = Object.entries(storeData);\n    entries.map((i: any) => {\n      if (i[1].status === props.status) {\n        final.push([\n          i[0],\n          i[1].caption,\n          i[1].status,\n          i[1].tag,\n          i[1].timestamp,\n          i[1].commentCount,\n          i[1].pins,\n        ]);\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (storeReady) {\n      fetchStoreData();\n      setFirestoreData(final);\n    }\n  }, [storeReady, storeData]);\n\n  return (\n    <div className=\"statuscol-col\">\n      <h4>{props.status}</h4>\n      <div className=\"card-container\">\n        {storeReady ? (\n          <div>\n            {firestoreData.map((item: any) => {\n              return (\n                <CardComponent\n                  key={item[0]}\n                  id={item[0]}\n                  caption={item[1]}\n                  status={item[2]}\n                  tag={item[3]}\n                  timestamp={item[4]}\n                  commentCount={item[5]}\n                  pins={item[6]}\n                />\n              );\n            })}\n          </div>\n        ) : (\n          <div>Loading...</div>\n        )}\n      </div>\n\n      <div className=\"add-card\">\n        <CardCreator />\n      </div>\n    </div>\n  );\n}\n\nexport default StatusCol;\n","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/Navbar/Navbar.tsx",[],"/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/Tag/Tag.tsx",[],"/home/sriharsh/Desktop/task-management-application/src/components/Modal/Modal.tsx",["151"],"/home/sriharsh/Desktop/task-management-application/src/store/store.ts",[],"/home/sriharsh/Desktop/task-management-application/src/components/Modal/CommentsModal/CommentsModal.tsx",["152","153","154"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AiOutlineClose } from \"react-icons/ai\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/firestore\";\nimport \"firebase/functions\";\nimport { auth } from \"../../../firebase/firebaseIndex\";\nimport \"./CommentsModal.css\";\nimport { UIState } from \"../../../store/types\";\nimport { firestoreDB } from \"../../../firebase/firebaseIndex\";\nimport { setCardIDActionMethod } from \"../../../store/actions/actions\";\nimport {\n  emptyCommentsStoreActionMethod,\n  getCommentsFromFirestoreThunkAction,\n} from \"../../../store/actions/commentsAction\";\n\nfunction CommentsModal() {\n  const commentModalState = useSelector<UIState>((state) => state.show);\n  const cardId: any = useSelector<any>((state) => state.uiReducer.cardID);\n  const commentsFromStore: any = useSelector<any>(\n    (state) => state.commentsReducer\n  );\n  const [loading, setLoading] = useState(Boolean);\n  const [comment, setComment] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const handleCommentSubmit = (e: any) => {\n    e.preventDefault();\n    const user = auth().currentUser?.email;\n    console.log(user, \"user\");\n\n    firestoreDB\n      .collection(\"card\")\n      .doc(cardId)\n      .collection(\"Comments\")\n      .doc()\n      .set({ comment: comment, user: user })\n      .then(() => {\n        console.log(\"comment added to firestore\");\n        dispatch(getCommentsFromFirestoreThunkAction(cardId));\n        firestoreDB\n          .collection(\"card\")\n          .doc(cardId)\n          .update({ commentCount: firebase.firestore.FieldValue.increment(1) });\n      });\n  };\n\n  useEffect(() => {\n    commentsFromStore === [] ? setLoading(true) : setLoading(false);\n  }, [loading]);\n\n  return (\n    <div>\n      <div className=\"comment-modal\">\n        {/* ================= Top Bar============================ */}\n        <div className=\"comment-modal-top-bar\">\n          <div className=\"comment-modal-heading\">Comments</div>\n          <div\n            className=\"comment-modal-top-bar-icon\"\n            onClick={() => {\n              dispatch({ type: \"MODAL\", payload: false });\n              dispatch(emptyCommentsStoreActionMethod());\n            }}\n          >\n            <AiOutlineClose />\n          </div>\n        </div>\n        {/* ================= Display Comments Section============================ */}\n        {/* {loading ? ( */}\n        {loading ? (\n          <div>Loading...</div>\n        ) : (\n          <div>\n            <ul>\n              {commentsFromStore.map((item: any) => {\n                return (\n                  <li key={item[0]}>\n                    {item[1]}\n                    _User:{item[2]}\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        )}\n\n        {/* ================= Add Comments Section============================ */}\n\n        <div className=\"comment-modal-comment-section\">\n          <form onSubmit={handleCommentSubmit}>\n            <textarea\n              onChange={(e: any) => {\n                setComment(e.target.value);\n              }}\n            ></textarea>\n\n            <button type=\"submit\">Done</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CommentsModal;\n","/home/sriharsh/Desktop/task-management-application/src/store/types.ts",[],"/home/sriharsh/Desktop/task-management-application/src/Testing/Test.tsx",["155","156","157"],"import { useSelector, useDispatch } from \"react-redux\";\n\nimport { Task } from \"../store/types\";\nimport { fireDataToStoreThunkActionMethod } from \"../store/actions/actions\";\nfunction Test() {\n  const reduxStore: any = useSelector<any>((state) => state);\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <button\n        onClick={() => {\n          console.log(reduxStore, \"Store\");\n        }}\n      >\n        Check Store\n      </button>\n    </div>\n  );\n}\n\nexport default Test;\n","/home/sriharsh/Desktop/task-management-application/src/store/actions/actions.ts",[],"/home/sriharsh/Desktop/task-management-application/src/store/reducers/Reducer.ts",[],"/home/sriharsh/Desktop/task-management-application/src/store/reducers/uiReducer.ts",[],"/home/sriharsh/Desktop/task-management-application/src/store/actions/commentsAction.ts",[],"/home/sriharsh/Desktop/task-management-application/src/store/reducers/commentsReducer.ts",[],"/home/sriharsh/Desktop/task-management-application/src/store/actions/CommentLoadingAction.ts",[],{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"158","replacedBy":"162"},{"ruleId":"160","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":1,"column":17,"nodeType":"166","messageId":"167","endLine":1,"endColumn":25},{"ruleId":"164","severity":1,"message":"168","line":9,"column":10,"nodeType":"166","messageId":"167","endLine":9,"endColumn":17},{"ruleId":"164","severity":1,"message":"169","line":3,"column":25,"nodeType":"166","messageId":"167","endLine":3,"endColumn":33},{"ruleId":"164","severity":1,"message":"170","line":10,"column":28,"nodeType":"166","messageId":"167","endLine":10,"endColumn":46},{"ruleId":"164","severity":1,"message":"171","line":1,"column":38,"nodeType":"166","messageId":"167","endLine":1,"endColumn":45},{"ruleId":"164","severity":1,"message":"172","line":6,"column":10,"nodeType":"166","messageId":"167","endLine":6,"endColumn":30},{"ruleId":"164","severity":1,"message":"173","line":9,"column":11,"nodeType":"166","messageId":"167","endLine":9,"endColumn":26},{"ruleId":"164","severity":1,"message":"170","line":9,"column":28,"nodeType":"166","messageId":"167","endLine":9,"endColumn":46},{"ruleId":"164","severity":1,"message":"174","line":11,"column":9,"nodeType":"166","messageId":"167","endLine":11,"endColumn":17},{"ruleId":"175","severity":1,"message":"176","line":46,"column":9,"nodeType":"177","endLine":50,"endColumn":10},{"ruleId":"164","severity":1,"message":"173","line":8,"column":11,"nodeType":"166","messageId":"167","endLine":8,"endColumn":26},{"ruleId":"164","severity":1,"message":"170","line":8,"column":28,"nodeType":"166","messageId":"167","endLine":8,"endColumn":46},{"ruleId":"175","severity":1,"message":"176","line":42,"column":9,"nodeType":"177","endLine":46,"endColumn":10},{"ruleId":"164","severity":1,"message":"178","line":7,"column":10,"nodeType":"166","messageId":"167","endLine":7,"endColumn":33},{"ruleId":"164","severity":1,"message":"179","line":22,"column":9,"nodeType":"166","messageId":"167","endLine":22,"endColumn":19},{"ruleId":"164","severity":1,"message":"180","line":27,"column":10,"nodeType":"166","messageId":"167","endLine":27,"endColumn":21},{"ruleId":"181","severity":1,"message":"182","line":71,"column":6,"nodeType":"183","endLine":71,"endColumn":8,"suggestions":"184"},{"ruleId":"164","severity":1,"message":"185","line":6,"column":19,"nodeType":"166","messageId":"167","endLine":6,"endColumn":29},{"ruleId":"164","severity":1,"message":"186","line":8,"column":9,"nodeType":"166","messageId":"167","endLine":8,"endColumn":21},{"ruleId":"164","severity":1,"message":"187","line":2,"column":10,"nodeType":"166","messageId":"167","endLine":2,"endColumn":22},{"ruleId":"164","severity":1,"message":"188","line":7,"column":10,"nodeType":"166","messageId":"167","endLine":7,"endColumn":21},{"ruleId":"164","severity":1,"message":"189","line":38,"column":9,"nodeType":"166","messageId":"167","endLine":38,"endColumn":18},{"ruleId":"190","severity":1,"message":"191","line":43,"column":26,"nodeType":"192","messageId":"193","endLine":43,"endColumn":28},{"ruleId":"181","severity":1,"message":"194","line":63,"column":6,"nodeType":"183","endLine":63,"endColumn":29,"suggestions":"195"},{"ruleId":"164","severity":1,"message":"196","line":1,"column":17,"nodeType":"166","messageId":"167","endLine":1,"endColumn":27},{"ruleId":"164","severity":1,"message":"197","line":13,"column":10,"nodeType":"166","messageId":"167","endLine":13,"endColumn":31},{"ruleId":"164","severity":1,"message":"198","line":20,"column":9,"nodeType":"166","messageId":"167","endLine":20,"endColumn":26},{"ruleId":"181","severity":1,"message":"199","line":52,"column":6,"nodeType":"183","endLine":52,"endColumn":15,"suggestions":"200"},{"ruleId":"164","severity":1,"message":"201","line":3,"column":10,"nodeType":"166","messageId":"167","endLine":3,"endColumn":14},{"ruleId":"164","severity":1,"message":"202","line":4,"column":10,"nodeType":"166","messageId":"167","endLine":4,"endColumn":42},{"ruleId":"164","severity":1,"message":"174","line":7,"column":9,"nodeType":"166","messageId":"167","endLine":7,"endColumn":17},"no-native-reassign",["203"],"no-negated-in-lhs",["204"],["203"],["204"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'UIState' is defined but never used.","'Redirect' is defined but never used.","'setIsAuthenticated' is assigned a value but never used.","'useMemo' is defined but never used.","'setEmailActionMethod' is defined but never used.","'isAuthenticated' is assigned a value but never used.","'dispatch' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'createFirestoreInstance' is defined but never used.","'modalState' is assigned a value but never used.","'showTooltip' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array. If 'setCardID' needs the current value of 'props.id', you can also switch to useReducer instead of useState and read 'props.id' in the reducer.","ArrayExpression",["205"],"'setCaption' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'useFirestore' is defined but never used.","'firestoreDB' is defined but never used.","'temp' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'fetchStoreData' and 'final'. Either include them or remove the dependency array.",["206"],"'useContext' is defined but never used.","'setCardIDActionMethod' is defined but never used.","'commentModalState' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'commentsFromStore'. Either include it or remove the dependency array.",["207"],"'Task' is defined but never used.","'fireDataToStoreThunkActionMethod' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},"Update the dependencies array to be: [props.id]",{"range":"214","text":"215"},"Update the dependencies array to be: [storeReady, storeData, fetchStoreData, final]",{"range":"216","text":"217"},"Update the dependencies array to be: [commentsFromStore, loading]",{"range":"218","text":"219"},[2071,2073],"[props.id]",[1829,1852],"[storeReady, storeData, fetchStoreData, final]",[1795,1804],"[commentsFromStore, loading]"]