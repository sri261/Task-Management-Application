[{"/home/sriharsh/Desktop/task-management-application/src/index.tsx":"1","/home/sriharsh/Desktop/task-management-application/src/reportWebVitals.ts":"2","/home/sriharsh/Desktop/task-management-application/src/App.tsx":"3","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/ProjectComponent.tsx":"4","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/ProjectTopBarComponent/ProjectTopBarComponent.tsx":"5","/home/sriharsh/Desktop/task-management-application/src/Apps.tsx":"6","/home/sriharsh/Desktop/task-management-application/src/provider/AuthProvider.tsx":"7","/home/sriharsh/Desktop/task-management-application/src/components/Signin/Signin.tsx":"8","/home/sriharsh/Desktop/task-management-application/src/components/Signup/Signup.tsx":"9","/home/sriharsh/Desktop/task-management-application/src/firebase/firebaseIndex.tsx":"10","/home/sriharsh/Desktop/task-management-application/src/components/TestComp.tsx":"11","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/CardComponent/CardComponent.tsx":"12","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/CardComponent/CaptionComponent/CaptionComponent.tsx":"13","/home/sriharsh/Desktop/task-management-application/src/Redux/Reducers/rootReducer.tsx":"14","/home/sriharsh/Desktop/task-management-application/src/Redux/store.tsx":"15"},{"size":825,"mtime":1610343028613,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":1609910416367,"results":"18","hashOfConfig":"17"},{"size":247,"mtime":1609913279717,"results":"19","hashOfConfig":"17"},{"size":1465,"mtime":1610376076495,"results":"20","hashOfConfig":"17"},{"size":433,"mtime":1610033669828,"results":"21","hashOfConfig":"17"},{"size":1046,"mtime":1610187338869,"results":"22","hashOfConfig":"17"},{"size":1036,"mtime":1610031658245,"results":"23","hashOfConfig":"17"},{"size":1444,"mtime":1610292703336,"results":"24","hashOfConfig":"17"},{"size":1516,"mtime":1610293301754,"results":"25","hashOfConfig":"17"},{"size":1042,"mtime":1610344093793,"results":"26","hashOfConfig":"17"},{"size":1350,"mtime":1610089920031,"results":"27","hashOfConfig":"17"},{"size":725,"mtime":1610376622065,"results":"28","hashOfConfig":"17"},{"size":1019,"mtime":1610375945235,"results":"29","hashOfConfig":"17"},{"size":196,"mtime":1610341924038,"results":"30","hashOfConfig":"17"},{"size":188,"mtime":1610342777396,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"10tqwk2",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/home/sriharsh/Desktop/task-management-application/src/index.tsx",[],["70","71"],"/home/sriharsh/Desktop/task-management-application/src/reportWebVitals.ts",[],"/home/sriharsh/Desktop/task-management-application/src/App.tsx",[],["72","73"],"/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/ProjectComponent.tsx",["74"],"/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/ProjectTopBarComponent/ProjectTopBarComponent.tsx",[],"/home/sriharsh/Desktop/task-management-application/src/Apps.tsx",["75","76","77"],"import \"./Apps.css\";\nimport React, { useContext } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Signin from \"./components/Signin/Signin\";\nimport Signup from \"./components/Signup/Signup\";\nimport \"./App.css\";\nimport { firebaseAuth } from \"./provider/AuthProvider\";\nimport ProjectComponent from \"./components/ProjectComponent/ProjectComponent\";\nimport TestComp from \"./components/TestComp\";\n\nfunction App() {\n  const { isAuthenticated, setIsAuthenticated } = useContext(firebaseAuth);\n\n  if (isAuthenticated.loading) {\n    return <div>Loading...</div>;\n  }\n  console.log(isAuthenticated);\n  return (\n    <>\n      <Switch>\n        {isAuthenticated.isAuthenticated ? (\n          <Route exact path=\"/\" render={() => <ProjectComponent />} />\n        ) : null}\n\n        <Route exact path=\"/signin\" component={Signin} />\n        <Route exact path=\"/signup\" component={Signup} />\n\n        <Route path=\"\" component={Signin} />\n      </Switch>\n      {/* <a href=\"/signup\">Signup</a> */}\n    </>\n  );\n}\n\nexport default App;\n","/home/sriharsh/Desktop/task-management-application/src/provider/AuthProvider.tsx",["78"],"import React, { useState, useEffect, useMemo } from \"react\";\nimport { auth } from \"../firebase/firebaseIndex\";\n\ninterface FirebaseContextType {\n  isAuthenticated: Authenticated;\n  setIsAuthenticated: Function;\n}\n\ninterface Authenticated {\n  loading: Boolean;\n  isAuthenticated: Boolean;\n}\n\nexport const firebaseAuth = React.createContext({} as FirebaseContextType);\n\nconst AuthProvider = (props: any) => {\n  const [isAuthenticated, setIsAuthenticated] = useState({\n    loading: true,\n    isAuthenticated: false,\n  } as Authenticated);\n\n  useEffect(() => {\n    auth().onAuthStateChanged((user) => {\n      if (user) {\n        setIsAuthenticated({\n          loading: false,\n          isAuthenticated: true,\n        });\n      } else {\n        setIsAuthenticated({\n          loading: false,\n          isAuthenticated: false,\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <firebaseAuth.Provider value={{ isAuthenticated, setIsAuthenticated }}>\n      {props.children}\n    </firebaseAuth.Provider>\n  );\n};\n\nexport default AuthProvider;\n","/home/sriharsh/Desktop/task-management-application/src/components/Signin/Signin.tsx",["79","80","81"],"import \"./Signin.css\";\nimport React, { useContext, useState } from \"react\";\nimport { firebaseAuth } from \"../../provider/AuthProvider\";\nimport { auth } from \"../../firebase/firebaseIndex\";\n\nconst Signin = (props: any) => {\n  const { isAuthenticated, setIsAuthenticated } = useContext(firebaseAuth);\n  const [error, setError] = useState(null);\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    setError(null);\n    const { email, password } = e.target;\n    console.log(email.value, password.value);\n    auth()\n      .signInWithEmailAndPassword(email.value, password.value)\n      .then(() => {\n        props.history.push(\"/\");\n      })\n      .catch((error) => {\n        console.log(error);\n        setError(error.message);\n      });\n  };\n\n  return (\n    <div className=\"bg\">\n      <form className=\"signin\" onSubmit={handleSubmit}>\n        <h2 className=\"title\"> SignIn</h2>\n\n        <input className=\"input\" required name=\"email\" placeholder=\"email\" />\n        <input\n          className=\"input\"\n          required\n          name=\"password\"\n          placeholder=\"password\"\n          type=\"password\"\n        />\n        <button className=\"signin-button\" type=\"submit\">\n          Signin\n        </button>\n        {error || null}\n        <a\n          onClick={() => {\n            props.history.push(\"/signup\");\n          }}\n        >\n          Create new account?\n        </a>\n      </form>\n    </div>\n  );\n};\n\nexport default Signin;\n","/home/sriharsh/Desktop/task-management-application/src/components/Signup/Signup.tsx",["82","83","84"],"import \"./Signup.css\";\nimport React, { useContext, useState } from \"react\";\nimport { firebaseAuth } from \"../../provider/AuthProvider\";\nimport { withRouter } from \"react-router-dom\";\nimport { auth } from \"../../firebase/firebaseIndex\";\n\nconst Signup = (props: any) => {\n  const { isAuthenticated, setIsAuthenticated } = useContext(firebaseAuth);\n  const [error, setError] = useState(null);\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    setError(null);\n    const { email, password } = e.target;\n    console.log(email.value, password.value);\n    auth()\n      .createUserWithEmailAndPassword(email.value, password.value)\n      .then(() => {\n        props.history.push(\"/\");\n      })\n      .catch((error) => {\n        console.log(error);\n        setError(error.message);\n      });\n  };\n  return (\n    <div className=\"bg\">\n      <form className=\"signup\" onSubmit={handleSubmit}>\n        <h2 className=\"title\">SignUp</h2>\n        <input className=\"input\" required name=\"email\" placeholder=\"email\" />\n        <input\n          className=\"input\"\n          required\n          name=\"password\"\n          placeholder=\"password\"\n          type=\"password\"\n        />\n        <button className=\"signup-button\" type=\"submit\">\n          SignUp\n        </button>\n        {error || null}\n        <a\n          onClick={() => {\n            props.history.push(\"/signin\");\n          }}\n        >\n          Already have an account, SignIn\n        </a>\n      </form>\n    </div>\n  );\n};\n\nexport default withRouter(Signup);\n","/home/sriharsh/Desktop/task-management-application/src/firebase/firebaseIndex.tsx",[],"/home/sriharsh/Desktop/task-management-application/src/components/TestComp.tsx",["85"],"import React from \"react\";\nimport { firestoreDB } from \"../firebase/firebaseIndex\";\nimport firebase from \"firebase\";\nfunction TestComp() {\n  console.log(firestoreDB, \"firestoreDB\");\n\n  firestoreDB\n    .collection(\"card\")\n    .add({\n      firstName: \"tom\",\n      lastName: \"Hanks\",\n      emailID: \"sample@gmail.com\",\n    })\n    .then((docRef) => {\n      console.log(docRef, \"docRef\");\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n\n  firestoreDB\n    .collection(\"card\")\n    .doc(\"ID1\")\n    .set({\n      firstName: \"Tom\",\n      lastName: \"Hanks\",\n      emailID: \"willsmith@gmail.com\",\n    })\n    .then(() => {\n      console.log(\"added to firestoreDB\");\n    })\n    .catch((error) => {\n      console.log(\"Error adding to firestoreDB\", error);\n    });\n\n  firestoreDB\n    .collection(\"card\")\n    .get()\n    .then((querySnapshot) => {\n      querySnapshot.forEach((doc) => {\n        console.log(`${doc.id} ${doc.data()}`);\n      });\n    });\n\n  return (\n    <div>\n      <h1>Test Component</h1>\n    </div>\n  );\n}\n\nexport default TestComp;\n\nexport const addTofirestoreDb = () => {\n  firestoreDB\n    .collection(\"card\")\n    .doc(\"ID\")\n    .set({\n      caption: \"new caprion\",\n    })\n    .then(() => {\n      console.log(\"added to firestoreDB\");\n    })\n    .catch((error) => {\n      console.log(\"Error adding to firestoreDB\", error);\n    });\n};\n",["86","87"],"/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/CardComponent/CardComponent.tsx",["88","89","90","91"],"/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/CardComponent/CaptionComponent/CaptionComponent.tsx",["92","93"],"/home/sriharsh/Desktop/task-management-application/src/Redux/Reducers/rootReducer.tsx",[],"/home/sriharsh/Desktop/task-management-application/src/Redux/store.tsx",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"94","replacedBy":"98"},{"ruleId":"96","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":39,"column":6,"nodeType":"102","endLine":39,"endColumn":8,"suggestions":"103"},{"ruleId":"104","severity":1,"message":"105","line":3,"column":25,"nodeType":"106","messageId":"107","endLine":3,"endColumn":33},{"ruleId":"104","severity":1,"message":"108","line":9,"column":8,"nodeType":"106","messageId":"107","endLine":9,"endColumn":16},{"ruleId":"104","severity":1,"message":"109","line":12,"column":28,"nodeType":"106","messageId":"107","endLine":12,"endColumn":46},{"ruleId":"104","severity":1,"message":"110","line":1,"column":38,"nodeType":"106","messageId":"107","endLine":1,"endColumn":45},{"ruleId":"104","severity":1,"message":"111","line":7,"column":11,"nodeType":"106","messageId":"107","endLine":7,"endColumn":26},{"ruleId":"104","severity":1,"message":"109","line":7,"column":28,"nodeType":"106","messageId":"107","endLine":7,"endColumn":46},{"ruleId":"112","severity":1,"message":"113","line":43,"column":9,"nodeType":"114","endLine":47,"endColumn":10},{"ruleId":"104","severity":1,"message":"111","line":8,"column":11,"nodeType":"106","messageId":"107","endLine":8,"endColumn":26},{"ruleId":"104","severity":1,"message":"109","line":8,"column":28,"nodeType":"106","messageId":"107","endLine":8,"endColumn":46},{"ruleId":"112","severity":1,"message":"113","line":42,"column":9,"nodeType":"114","endLine":46,"endColumn":10},{"ruleId":"104","severity":1,"message":"115","line":3,"column":8,"nodeType":"106","messageId":"107","endLine":3,"endColumn":16},{"ruleId":"94","replacedBy":"116"},{"ruleId":"96","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":15,"column":18,"nodeType":"120","messageId":"121","endLine":15,"endColumn":20},{"ruleId":"122","severity":1,"message":"123","line":19,"column":9,"nodeType":"114","endLine":19,"endColumn":61},{"ruleId":"122","severity":1,"message":"123","line":20,"column":9,"nodeType":"114","endLine":20,"endColumn":16},{"ruleId":"122","severity":1,"message":"123","line":21,"column":9,"nodeType":"114","endLine":21,"endColumn":16},{"ruleId":"104","severity":1,"message":"124","line":6,"column":19,"nodeType":"106","messageId":"107","endLine":6,"endColumn":29},{"ruleId":"104","severity":1,"message":"125","line":8,"column":9,"nodeType":"106","messageId":"107","endLine":8,"endColumn":21},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],["126"],["127"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchCaptions' and 'firestoreData'. Either include them or remove the dependency array.","ArrayExpression",["128"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'TestComp' is defined but never used.","'setIsAuthenticated' is assigned a value but never used.","'useMemo' is defined but never used.","'isAuthenticated' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'firebase' is defined but never used.",["126"],["127"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'setCaption' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},"Update the dependencies array to be: [fetchCaptions, firestoreData]",{"range":"131","text":"132"},[1054,1056],"[fetchCaptions, firestoreData]"]