[{"/home/sriharsh/Desktop/task-management-application/src/index.tsx":"1","/home/sriharsh/Desktop/task-management-application/src/reportWebVitals.ts":"2","/home/sriharsh/Desktop/task-management-application/src/App.tsx":"3","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/ProjectComponent.tsx":"4","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/ProjectTopBarComponent/ProjectTopBarComponent.tsx":"5","/home/sriharsh/Desktop/task-management-application/src/Apps.tsx":"6","/home/sriharsh/Desktop/task-management-application/src/provider/AuthProvider.tsx":"7","/home/sriharsh/Desktop/task-management-application/src/components/Signin/Signin.tsx":"8","/home/sriharsh/Desktop/task-management-application/src/components/Signup/Signup.tsx":"9","/home/sriharsh/Desktop/task-management-application/src/firebase/firebaseIndex.tsx":"10","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/CardComponent/CardComponent.tsx":"11","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/CardComponent/CaptionComponent/CaptionComponent.tsx":"12","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/CardCreator/CardCreator.tsx":"13","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/StatusCol/StatusCol.tsx":"14","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/Navbar/Navbar.tsx":"15","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/Tag/Tag.tsx":"16","/home/sriharsh/Desktop/task-management-application/src/components/Modal/Modal.tsx":"17","/home/sriharsh/Desktop/task-management-application/src/store/store.ts":"18","/home/sriharsh/Desktop/task-management-application/src/components/Modal/CommentsModal/CommentsModal.tsx":"19","/home/sriharsh/Desktop/task-management-application/src/store/types.ts":"20","/home/sriharsh/Desktop/task-management-application/src/Testing/Test.tsx":"21","/home/sriharsh/Desktop/task-management-application/src/store/actions/actions.ts":"22","/home/sriharsh/Desktop/task-management-application/src/store/reducers/modalReducer.ts":"23","/home/sriharsh/Desktop/task-management-application/src/store/reducers/firebaseReducer.ts":"24"},{"size":666,"mtime":1611315528574,"results":"25","hashOfConfig":"26"},{"size":425,"mtime":1609910416367,"results":"27","hashOfConfig":"26"},{"size":247,"mtime":1609913279717,"results":"28","hashOfConfig":"26"},{"size":1192,"mtime":1611133455592,"results":"29","hashOfConfig":"26"},{"size":210,"mtime":1610538596694,"results":"30","hashOfConfig":"26"},{"size":1006,"mtime":1610620500246,"results":"31","hashOfConfig":"26"},{"size":1036,"mtime":1610031658245,"results":"32","hashOfConfig":"26"},{"size":1444,"mtime":1610292703336,"results":"33","hashOfConfig":"26"},{"size":1516,"mtime":1610293301754,"results":"34","hashOfConfig":"26"},{"size":1164,"mtime":1610951041609,"results":"35","hashOfConfig":"26"},{"size":3531,"mtime":1611289082790,"results":"36","hashOfConfig":"26"},{"size":1019,"mtime":1610375945235,"results":"37","hashOfConfig":"26"},{"size":3116,"mtime":1611076180809,"results":"38","hashOfConfig":"26"},{"size":2897,"mtime":1611293494410,"results":"39","hashOfConfig":"26"},{"size":2773,"mtime":1610521308165,"results":"40","hashOfConfig":"26"},{"size":712,"mtime":1610691924789,"results":"41","hashOfConfig":"26"},{"size":1029,"mtime":1611068181265,"results":"42","hashOfConfig":"26"},{"size":288,"mtime":1611314381747,"results":"43","hashOfConfig":"26"},{"size":1672,"mtime":1611239994425,"results":"44","hashOfConfig":"26"},{"size":2510,"mtime":1611312179008,"results":"45","hashOfConfig":"26"},{"size":2053,"mtime":1611317947126,"results":"46","hashOfConfig":"26"},{"size":769,"mtime":1611230876806,"results":"47","hashOfConfig":"26"},{"size":455,"mtime":1611230598049,"results":"48","hashOfConfig":"26"},{"size":1509,"mtime":1611293752436,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"10tqwk2",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},"/home/sriharsh/Desktop/task-management-application/src/index.tsx",[],["114","115"],"/home/sriharsh/Desktop/task-management-application/src/reportWebVitals.ts",[],"/home/sriharsh/Desktop/task-management-application/src/App.tsx",[],["116","117"],"/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/ProjectComponent.tsx",["118"],"import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport ProjectTopBarComponent from \"./ProjectTopBarComponent/ProjectTopBarComponent\";\nimport \"./ProjectComponent.css\";\nimport StatusCol from \"./StatusCol/StatusCol\";\nimport Navbar from \"./Navbar/Navbar\";\nimport CommentsModal from \"../Modal/CommentsModal/CommentsModal\";\nimport { ModalState } from \"../../store/types\";\n\nfunction ProjectComponent() {\n  const modalState = useSelector<ModalState>((state) => state.show);\n\n  return (\n    <>\n      <div style={modalState ? { filter: \"blur(2px)\" } : {}}>\n        <div className=\"project-component\">\n          <Navbar />\n\n          <div className=\"project-component-sub\">\n            <ProjectTopBarComponent />\n            <div className=\"status-cols\">\n              <StatusCol status=\"Task Ready\" />\n              <StatusCol status=\"In Progress\" />\n              <StatusCol status=\"Needs Review\" />\n              <StatusCol status=\"Done\" />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"project-component-modal\">\n        {modalState ? <CommentsModal /> : null}\n      </div>\n    </>\n  );\n}\n\nexport default ProjectComponent;\n","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/ProjectTopBarComponent/ProjectTopBarComponent.tsx",[],"/home/sriharsh/Desktop/task-management-application/src/Apps.tsx",["119","120"],"import \"./Apps.css\";\nimport React, { useContext } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Signin from \"./components/Signin/Signin\";\nimport Signup from \"./components/Signup/Signup\";\nimport \"./App.css\";\nimport { firebaseAuth } from \"./provider/AuthProvider\";\nimport ProjectComponent from \"./components/ProjectComponent/ProjectComponent\";\nfunction App() {\n  const { isAuthenticated, setIsAuthenticated } = useContext(firebaseAuth);\n\n  if (isAuthenticated.loading) {\n    return <div>Loading ...</div>;\n  }\n  console.log(isAuthenticated);\n  return (\n    <div>\n      <Switch>\n        {isAuthenticated.isAuthenticated ? (\n          <Route exact path=\"/\" render={() => <ProjectComponent />} />\n        ) : null}\n\n        <Route exact path=\"/signin\" component={Signin} />\n        <Route exact path=\"/signup\" component={Signup} />\n\n        <Route path=\"\" component={Signin} />\n      </Switch>\n      {/* <a href=\"/signup\">Signup</a> */}\n    </div>\n  );\n}\n\nexport default App;\n","/home/sriharsh/Desktop/task-management-application/src/provider/AuthProvider.tsx",["121"],"import React, { useState, useEffect, useMemo } from \"react\";\nimport { auth } from \"../firebase/firebaseIndex\";\n\ninterface FirebaseContextType {\n  isAuthenticated: Authenticated;\n  setIsAuthenticated: Function;\n}\n\ninterface Authenticated {\n  loading: Boolean;\n  isAuthenticated: Boolean;\n}\n\nexport const firebaseAuth = React.createContext({} as FirebaseContextType);\n\nconst AuthProvider = (props: any) => {\n  const [isAuthenticated, setIsAuthenticated] = useState({\n    loading: true,\n    isAuthenticated: false,\n  } as Authenticated);\n\n  useEffect(() => {\n    auth().onAuthStateChanged((user) => {\n      if (user) {\n        setIsAuthenticated({\n          loading: false,\n          isAuthenticated: true,\n        });\n      } else {\n        setIsAuthenticated({\n          loading: false,\n          isAuthenticated: false,\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <firebaseAuth.Provider value={{ isAuthenticated, setIsAuthenticated }}>\n      {props.children}\n    </firebaseAuth.Provider>\n  );\n};\n\nexport default AuthProvider;\n","/home/sriharsh/Desktop/task-management-application/src/components/Signin/Signin.tsx",["122","123","124"],"import \"./Signin.css\";\nimport React, { useContext, useState } from \"react\";\nimport { firebaseAuth } from \"../../provider/AuthProvider\";\nimport { auth } from \"../../firebase/firebaseIndex\";\n\nconst Signin = (props: any) => {\n  const { isAuthenticated, setIsAuthenticated } = useContext(firebaseAuth);\n  const [error, setError] = useState(null);\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    setError(null);\n    const { email, password } = e.target;\n    console.log(email.value, password.value);\n    auth()\n      .signInWithEmailAndPassword(email.value, password.value)\n      .then(() => {\n        props.history.push(\"/\");\n      })\n      .catch((error) => {\n        console.log(error);\n        setError(error.message);\n      });\n  };\n\n  return (\n    <div className=\"bg\">\n      <form className=\"signin\" onSubmit={handleSubmit}>\n        <h2 className=\"title\"> SignIn</h2>\n\n        <input className=\"input\" required name=\"email\" placeholder=\"email\" />\n        <input\n          className=\"input\"\n          required\n          name=\"password\"\n          placeholder=\"password\"\n          type=\"password\"\n        />\n        <button className=\"signin-button\" type=\"submit\">\n          Signin\n        </button>\n        {error || null}\n        <a\n          onClick={() => {\n            props.history.push(\"/signup\");\n          }}\n        >\n          Create new account?\n        </a>\n      </form>\n    </div>\n  );\n};\n\nexport default Signin;\n","/home/sriharsh/Desktop/task-management-application/src/components/Signup/Signup.tsx",["125","126","127"],"import \"./Signup.css\";\nimport React, { useContext, useState } from \"react\";\nimport { firebaseAuth } from \"../../provider/AuthProvider\";\nimport { withRouter } from \"react-router-dom\";\nimport { auth } from \"../../firebase/firebaseIndex\";\n\nconst Signup = (props: any) => {\n  const { isAuthenticated, setIsAuthenticated } = useContext(firebaseAuth);\n  const [error, setError] = useState(null);\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    setError(null);\n    const { email, password } = e.target;\n    console.log(email.value, password.value);\n    auth()\n      .createUserWithEmailAndPassword(email.value, password.value)\n      .then(() => {\n        props.history.push(\"/\");\n      })\n      .catch((error) => {\n        console.log(error);\n        setError(error.message);\n      });\n  };\n  return (\n    <div className=\"bg\">\n      <form className=\"signup\" onSubmit={handleSubmit}>\n        <h2 className=\"title\">SignUp</h2>\n        <input className=\"input\" required name=\"email\" placeholder=\"email\" />\n        <input\n          className=\"input\"\n          required\n          name=\"password\"\n          placeholder=\"password\"\n          type=\"password\"\n        />\n        <button className=\"signup-button\" type=\"submit\">\n          SignUp\n        </button>\n        {error || null}\n        <a\n          onClick={() => {\n            props.history.push(\"/signin\");\n          }}\n        >\n          Already have an account, SignIn\n        </a>\n      </form>\n    </div>\n  );\n};\n\nexport default withRouter(Signup);\n","/home/sriharsh/Desktop/task-management-application/src/firebase/firebaseIndex.tsx",["128"],"// Initialize Firebase\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/firestore\";\nimport \"firebase/functions\";\nimport { createFirestoreInstance } from \"redux-firestore\";\n\nvar firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTHDOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGEBUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n};\nfirebase.initializeApp(firebaseConfig);\n// firebase.firestore(); /*<--------------------*/\n\n// export const rrfConfig = {\n//   userProfile: \"users\" /*<--------------------*/,\n//   useFirestoreForProfile: true,\n// };\n\n// export const rrfProps = {\n//   // firebase /*<--------------------*/,\n//   config: rrfConfig,\n//   dispatch: store.dispatch,\n//   createFirestoreInstance,\n// };\n\nexport const auth = firebase.auth;\nexport const db = firebase.database();\nexport const firestoreDB = firebase.firestore();\n\n// export default firebase; /*<--------------------*/\n","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/CardComponent/CardComponent.tsx",["129","130","131","132","133"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FaCommentAlt } from \"react-icons/fa\";\nimport { BsThreeDots } from \"react-icons/bs\";\nimport { AiOutlinePaperClip, AiFillFlag } from \"react-icons/ai\";\n\nimport \"./CardComponent.css\";\nimport \"./CaptionComponent/CaptionComponent\";\nimport Tag from \"../Tag/Tag\";\nimport { ModalState } from \"../../../store/types\";\nimport { changeModalActionMethod } from \"../../../store/actions/actions\";\nimport ProfilePic from \"../../../images/profile-pic.jpg\";\n\nfunction CardComponent(props: any) {\n  const modalState = useSelector<ModalState>((state) => state.show);\n  const dispatch = useDispatch();\n  const [pincount, setPincount]: any = useState(0);\n  const [editCaption, setEditCaption] = useState(false);\n  const [cardID, setCardID] = useState();\n\n  const pinClickHandler = () => {\n    setPincount(pincount + 1);\n  };\n\n  const editCaptionFn = () => {\n    if (editCaption) {\n      setEditCaption(false);\n    } else if (editCaption === false) {\n      setEditCaption(true);\n    }\n  };\n  const tempFn = () => {\n    return props.caption;\n  };\n\n  useEffect(() => {\n    setCardID(props.id);\n  }, []);\n  return (\n    <>\n      <div className=\"card-component\" draggable>\n        {/* ================= Top Bar============================ */}\n        <div className=\"card-top-bar\">\n          {/* ==== Tag Component===== */}\n          <Tag tag={props.tag} />\n          {/* ==== Info Dots Icon ===== */}\n          <div>\n            <BsThreeDots />\n          </div>\n        </div>\n        {/* ================= Caption Section============================ */}\n        <div>\n          {editCaption ? (\n            <div>\n              {editCaption ? (\n                <form onSubmit={editCaptionFn}>\n                  <input\n                    className=\"card-component-caption-input\"\n                    // value={props.caption}\n                    value={tempFn()}\n                    // onChange={(e) => {\n                    //   tempFn(e.target.value);\n                    // }}\n                  />\n\n                  {/* <button type=\"submit\" onClick={editCaptionFn}> */}\n                  <button type=\"submit\">Done</button>\n                </form>\n              ) : null}\n            </div>\n          ) : (\n            <div onClick={editCaptionFn}>\n              <p>{props.caption} </p>\n            </div>\n          )}\n        </div>\n        {/* ================= Bottom Icon Bar============================ */}\n        <div className=\"bottom-bar\">\n          <div className=\"icons-bar\">\n            {/* ====Timestamp icon===== */}\n            <div className=\"icon\">\n              <AiFillFlag />\n              <span className=\"icon-info\">12 Jan</span>\n            </div>\n            {/* ====Comment icon===== */}\n            <div\n              className=\"icon comment-icon\"\n              onClick={() => {\n                dispatch(changeModalActionMethod(true));\n              }}\n            >\n              <FaCommentAlt />\n              <span className=\"icon-info\">4</span>\n            </div>\n            {/* ====Pins icon===== */}\n            <div className=\"icon\" onClick={pinClickHandler}>\n              <AiOutlinePaperClip className=\"icon\" />\n              <span className=\"icon-info\">{pincount}</span>\n            </div>\n          </div>\n          {/* <div className=\"profile-pic\">\n            <img src={ProfilePic} alt=\"\" />\n          </div> */}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default CardComponent;\n","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/CardComponent/CaptionComponent/CaptionComponent.tsx",["134","135"],"import React, { useState } from \"react\";\nimport \"./CaptionComponent.css\";\n// import { firestoreDB } from \"../../../../firebase/firebaseIndex\";\nimport { useFirestore } from \"react-redux-firebase\";\nfunction CaptionComponent() {\n  const [caption, setCaption] = useState(\"\");\n  const firestore = useFirestore();\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    console.log(caption, \"caption\");\n    // firestoreDB\n    firestore\n      .collection(\"card\")\n      .doc(caption)\n      .set({\n        caption: caption,\n      })\n      .then(() => {\n        console.log(\"added to firestoreDB\");\n      })\n      .catch((error) => {\n        console.log(\"Error adding to firestoreDB\", error);\n      });\n  };\n  return (\n    <div>\n      {/* <form onSubmit={handleSubmit}>\n        <input\n          className=\"caption\"\n          type=\"text\"\n          onChange={(e) => setCaption(e.target.value)}\n        />\n        <input type=\"submit\" value=\"Submit\" />\n      </form> */}\n    </div>\n  );\n}\n\nexport default CaptionComponent;\n","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/CardCreator/CardCreator.tsx",["136"],"import React, { useState } from \"react\";\nimport \"./CardCreator.css\";\nimport { useFirestore } from \"react-redux-firebase\";\nimport { AiOutlineClose } from \"react-icons/ai\";\nimport { firestoreDB } from \"../../../firebase/firebaseIndex\";\n\nfunction CardCreator() {\n  const [caption, setCaption] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [tag, setTag] = useState(\"\");\n  const [show, setShow] = useState(false);\n\n  // const firestore = useFirestore();\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    setShow(false);\n    const timestamp = new Date();\n    // const timestampOnCard = timestamp.getDay();\n    // console.log(timestampOnCard);\n    firestoreDB\n      .collection(\"card\")\n      // .doc(caption)\n      .doc()\n      .set({\n        caption: caption,\n        timestamp: timestamp.toString(),\n        status: status,\n        tag: tag,\n      })\n      .then(() => {\n        console.log(\"added to firestoreDB\");\n      })\n      .catch((error) => {\n        console.log(\"Error adding to firestoreDB\", error);\n      });\n  };\n\n  return (\n    <div>\n      {show ? (\n        <div className=\"card-creator\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"cardcreator-top-bar\">\n              <h4>Create new Card</h4>\n              <div\n                className=\"cardcreator-top-bar-close\"\n                onClick={() => {\n                  setShow(false);\n                }}\n              >\n                <AiOutlineClose />\n              </div>\n            </div>\n            {/* =================== Input text box ========================== */}\n\n            <input\n              type=\"text\"\n              onChange={(e) => {\n                setCaption(e.target.value);\n              }}\n              placeholder=\"What is the new task?\"\n              required\n            />\n            {/* =================== Select task dropdown ========================== */}\n            <select\n              onChange={(e) => {\n                setStatus(e.target.value);\n              }}\n            >\n              <option>Select Task Progress</option>\n              <option value=\"Task Ready\">Task Ready</option>\n              <option value=\"In Progress\">In Progress</option>\n              <option value=\"Needs Review\">Needs Review</option>\n              <option value=\"Done\">Done</option>\n            </select>\n            {/* ==================== Select tag dropdown ========================= */}\n\n            <select\n              onChange={(e) => {\n                setTag(e.target.value);\n              }}\n            >\n              <option>Select Task Tag</option>\n              <option value=\"UI Design\">UI Design</option>\n              <option value=\"Copywritng\">Copywritng</option>\n              <option value=\"Illustration\">Illustration</option>\n              <option value=\"Code\">Code</option>\n            </select>\n\n            <button type=\"submit\">\n              <h6>Done</h6>\n            </button>\n          </form>\n        </div>\n      ) : (\n        <div onClick={() => setShow(true)}>\"+ Add Card\"</div>\n      )}\n    </div>\n  );\n}\n\nexport default CardCreator;\n","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/StatusCol/StatusCol.tsx",["137","138","139"],"import React, { useState, useEffect } from \"react\";\nimport \"./StatusCol.css\";\nimport CardCreator from \"../CardCreator/CardCreator\";\nimport CardComponent from \"../CardComponent/CardComponent\";\nimport { useFirestore } from \"react-redux-firebase\";\nimport { firestoreDB } from \"../../../firebase/firebaseIndex\";\nfunction StatusCol(props: any) {\n  const [firestoreData, setFirestoreData] = useState<any>([]);\n  const [loading, setLoading] = useState(true);\n\n  // const firestore = useFirestore();\n\n  const fetchCaptions = () => {\n    const final: Array<any> = [];\n    // +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n    // firestoreDB\n    //   .collection(\"card\")\n    //   .where(\"status\", \"==\", props.status)\n    //   .onSnapshot((querySnapshot) => {\n    //     querySnapshot.forEach((doc) => {\n    //       console.log(doc.data());\n    //     });\n\n    //     setFirestoreData(final);\n    //     setLoading(false);\n    //   });\n    // +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n    // firestoreDB\n    //   .collection(\"card\")\n    //   .where(\"status\", \"==\", props.status)\n    //   .get()\n    //   .then((querySnapshot) => {\n    //     querySnapshot.forEach((doc) => {\n    //       final.push([\n    //         doc.data().caption,\n    //         doc.data().status,\n    //         doc.data().tag,\n    //         doc.data().timestamp,\n    //         doc.id,\n    //       ]);\n    //       setFirestoreData(final);\n    //       setLoading(false);\n    //     });\n    //   });\n\n    // +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n    // firestore.collection(\"card\").onSnapshot((querySnapshot) => {\n    firestoreDB.collection(\"card\").onSnapshot((querySnapshot) => {\n      querySnapshot.forEach((doc) => {\n        // const date = new Date(doc.data().timestamp);\n        if (doc.data().status == props.status) {\n          final.push([\n            doc.data().caption,\n            doc.data().status,\n            doc.data().tag,\n            doc.data().timestamp,\n            doc.id,\n          ]);\n        }\n      });\n\n      setFirestoreData(final);\n      setLoading(false);\n    });\n    // +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n  };\n\n  useEffect(() => {\n    fetchCaptions();\n  }, []);\n\n  return (\n    <div className=\"statuscol-col\">\n      <h4>{props.status}</h4>\n\n      <div className=\"card-container\">\n        {loading === true ? (\n          <div className=\"loading-gif\">Loading . . .</div>\n        ) : (\n          firestoreData.map((item: any) => {\n            return (\n              <CardComponent\n                key={item[4]}\n                caption={item[0]}\n                tag={item[2]}\n                timestamp={item[3]}\n                id={item[4]}\n              />\n            );\n          })\n        )}\n      </div>\n\n      <div className=\"add-card\">\n        <CardCreator />\n      </div>\n    </div>\n  );\n}\n\nexport default StatusCol;\n","/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/Navbar/Navbar.tsx",[],"/home/sriharsh/Desktop/task-management-application/src/components/ProjectComponent/Tag/Tag.tsx",[],"/home/sriharsh/Desktop/task-management-application/src/components/Modal/Modal.tsx",["140"],"/home/sriharsh/Desktop/task-management-application/src/store/store.ts",["141","142"],"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { modalReducer } from \"./reducers/modalReducer\";\n\nimport { reducer } from \"../Testing/Test\";\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nexport default store;\n","/home/sriharsh/Desktop/task-management-application/src/components/Modal/CommentsModal/CommentsModal.tsx",["143"],"import React, { useState } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AiOutlineClose } from \"react-icons/ai\";\n\nimport \"./CommentsModal.css\";\nimport { ModalState } from \"../../../store/types\";\n\nfunction CommentsModal() {\n  const commentModalState = useSelector<ModalState>((state) => state.show);\n  const dispatch = useDispatch();\n  const [comment, setComment] = useState(\"\");\n  const handleCommentSubmit = (e: any) => {\n    e.preventDefault();\n    console.log(comment);\n  };\n\n  return (\n    <div>\n      <div className=\"comment-modal\">\n        {/* ================= Top Bar============================ */}\n        <div className=\"comment-modal-top-bar\">\n          <div className=\"comment-modal-heading\">Comments</div>\n          <div\n            className=\"comment-modal-top-bar-icon\"\n            onClick={() => {\n              dispatch({ type: \"MODAL\", payload: false });\n            }}\n          >\n            <AiOutlineClose />\n          </div>\n        </div>\n        {/* ================= Display Comments Section============================ */}\n        <div>\n          <p className=\"display-comments\">jsnbkjnsdkndkndknskdn</p>\n        </div>\n        {/* ================= Add Comments Section============================ */}\n\n        <div className=\"comment-modal-comment-section\">\n          <form onSubmit={handleCommentSubmit}>\n            <input\n              type=\"text\"\n              onChange={(e: any) => {\n                setComment(e.target.value);\n              }}\n            />\n            <button type=\"submit\">Done</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CommentsModal;\n","/home/sriharsh/Desktop/task-management-application/src/store/types.ts",["144","145"],"import { firestoreDB } from \"../firebase/firebaseIndex\";\nexport const MODAL = \"MODAL\";\nexport const GET_FIRE_DATA = \"GET_FIRE_DATA\";\nexport const ADD_TASK_TO_STORE = \"ADD_TASK_TO_STORE\";\nexport const ADD_FIRE_TO_STORE = \"ADD_FIRE_TO_STORE\";\n\nexport interface ModalState {\n  show: boolean;\n  id: string /*<<<<<<<<<<<,------------------------ */;\n}\n\nexport interface Card {\n  caption: string;\n  status: string;\n  tag: string;\n  time: string;\n}\n// export interface FirebaseDataState {\n//   cards: {\n//     [id: string]: Card;\n//   };\n// }\n\nexport interface FirebaseDataState {\n  cards: {\n    [id: string]: {\n      caption: string;\n      status: string;\n      tag: string;\n      time: string;\n    };\n  };\n}\n\nexport interface ModalAction {\n  type: typeof MODAL;\n  payload: boolean;\n}\n\n//------- Add test task to store -------------\nexport interface AddTestTaskToStore {\n  type: typeof ADD_TASK_TO_STORE;\n  payload: {\n    caption: string;\n    status: string;\n    tag: string;\n    timestamp: string;\n  };\n}\n\nexport const addTestTaskToStoreActionMethod = (\n  caption: string,\n  status: string,\n  tag: string,\n  timestamp: string\n): AddTestTaskToStore => {\n  return {\n    type: ADD_TASK_TO_STORE,\n    payload: {\n      caption: caption,\n      status: status,\n      tag: tag,\n      timestamp: timestamp,\n    },\n  };\n};\n\nexport interface AddToFireAction {\n  type: typeof ADD_TASK_TO_STORE;\n  payload: Card;\n}\n// ============================= Add Firebase Data To Store==================================\n//action\nexport interface Task {\n  caption: string;\n  status: string;\n  tag: string;\n  timestamp: string;\n}\n\nexport interface AddFireToStoreAction {\n  type: typeof ADD_FIRE_TO_STORE;\n  payload: Task;\n  id: string;\n}\n\n// action method\nexport const addFireToStoreActionMethod = (\n  payload: Task,\n  id: string\n): AddFireToStoreAction => {\n  return {\n    type: ADD_FIRE_TO_STORE,\n    payload: payload,\n    id: id,\n  };\n};\n\nexport const addFireToStoreActionMethodThunk = () => {\n  //wait here for firebase data and then return payload to reducer\n  return (dispatch: any) => {\n    firestoreDB.collection(\"card\").onSnapshot((querySnapshot) => {\n      console.log(querySnapshot);\n      querySnapshot.forEach((doc) => {\n        const data: Task = {\n          caption: doc.data().caption,\n          status: doc.data().status,\n          tag: doc.data().tag,\n          timestamp: doc.data().timestamp,\n        };\n        const id = doc.id;\n\n        // dispatch(addFireToStoreActionMethod(data, doc.id));\n      });\n    });\n  };\n};\n","/home/sriharsh/Desktop/task-management-application/src/Testing/Test.tsx",["146"],"/home/sriharsh/Desktop/task-management-application/src/store/actions/actions.ts",[],"/home/sriharsh/Desktop/task-management-application/src/store/reducers/modalReducer.ts",[],["147","148"],"/home/sriharsh/Desktop/task-management-application/src/store/reducers/firebaseReducer.ts",[],{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"149","replacedBy":"153"},{"ruleId":"151","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":1,"column":17,"nodeType":"157","messageId":"158","endLine":1,"endColumn":25},{"ruleId":"155","severity":1,"message":"159","line":3,"column":25,"nodeType":"157","messageId":"158","endLine":3,"endColumn":33},{"ruleId":"155","severity":1,"message":"160","line":10,"column":28,"nodeType":"157","messageId":"158","endLine":10,"endColumn":46},{"ruleId":"155","severity":1,"message":"161","line":1,"column":38,"nodeType":"157","messageId":"158","endLine":1,"endColumn":45},{"ruleId":"155","severity":1,"message":"162","line":7,"column":11,"nodeType":"157","messageId":"158","endLine":7,"endColumn":26},{"ruleId":"155","severity":1,"message":"160","line":7,"column":28,"nodeType":"157","messageId":"158","endLine":7,"endColumn":46},{"ruleId":"163","severity":1,"message":"164","line":43,"column":9,"nodeType":"165","endLine":47,"endColumn":10},{"ruleId":"155","severity":1,"message":"162","line":8,"column":11,"nodeType":"157","messageId":"158","endLine":8,"endColumn":26},{"ruleId":"155","severity":1,"message":"160","line":8,"column":28,"nodeType":"157","messageId":"158","endLine":8,"endColumn":46},{"ruleId":"163","severity":1,"message":"164","line":42,"column":9,"nodeType":"165","endLine":46,"endColumn":10},{"ruleId":"155","severity":1,"message":"166","line":7,"column":10,"nodeType":"157","messageId":"158","endLine":7,"endColumn":33},{"ruleId":"155","severity":1,"message":"167","line":1,"column":38,"nodeType":"157","messageId":"158","endLine":1,"endColumn":48},{"ruleId":"155","severity":1,"message":"168","line":12,"column":8,"nodeType":"157","messageId":"158","endLine":12,"endColumn":18},{"ruleId":"155","severity":1,"message":"169","line":15,"column":9,"nodeType":"157","messageId":"158","endLine":15,"endColumn":19},{"ruleId":"155","severity":1,"message":"170","line":19,"column":10,"nodeType":"157","messageId":"158","endLine":19,"endColumn":16},{"ruleId":"171","severity":1,"message":"172","line":38,"column":6,"nodeType":"173","endLine":38,"endColumn":8,"suggestions":"174"},{"ruleId":"155","severity":1,"message":"175","line":6,"column":19,"nodeType":"157","messageId":"158","endLine":6,"endColumn":29},{"ruleId":"155","severity":1,"message":"176","line":8,"column":9,"nodeType":"157","messageId":"158","endLine":8,"endColumn":21},{"ruleId":"155","severity":1,"message":"177","line":3,"column":10,"nodeType":"157","messageId":"158","endLine":3,"endColumn":22},{"ruleId":"155","severity":1,"message":"177","line":5,"column":10,"nodeType":"157","messageId":"158","endLine":5,"endColumn":22},{"ruleId":"178","severity":1,"message":"179","line":53,"column":31,"nodeType":"180","messageId":"181","endLine":53,"endColumn":33},{"ruleId":"171","severity":1,"message":"182","line":72,"column":6,"nodeType":"173","endLine":72,"endColumn":8,"suggestions":"183"},{"ruleId":"155","severity":1,"message":"167","line":1,"column":17,"nodeType":"157","messageId":"158","endLine":1,"endColumn":27},{"ruleId":"155","severity":1,"message":"184","line":1,"column":23,"nodeType":"157","messageId":"158","endLine":1,"endColumn":38},{"ruleId":"155","severity":1,"message":"185","line":3,"column":10,"nodeType":"157","messageId":"158","endLine":3,"endColumn":22},{"ruleId":"155","severity":1,"message":"186","line":10,"column":9,"nodeType":"157","messageId":"158","endLine":10,"endColumn":26},{"ruleId":"155","severity":1,"message":"187","line":105,"column":15,"nodeType":"157","messageId":"158","endLine":105,"endColumn":25},{"ruleId":"155","severity":1,"message":"188","line":111,"column":15,"nodeType":"157","messageId":"158","endLine":111,"endColumn":17},{"ruleId":"189","severity":1,"message":"190","line":71,"column":20,"nodeType":"191","messageId":"192","endLine":71,"endColumn":22},{"ruleId":"149","replacedBy":"193"},{"ruleId":"151","replacedBy":"194"},"no-native-reassign",["195"],"no-negated-in-lhs",["196"],["195"],["196"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'setIsAuthenticated' is assigned a value but never used.","'useMemo' is defined but never used.","'isAuthenticated' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'createFirestoreInstance' is defined but never used.","'useContext' is defined but never used.","'ProfilePic' is defined but never used.","'modalState' is assigned a value but never used.","'cardID' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array. If 'setCardID' needs the current value of 'props.id', you can also switch to useReducer instead of useState and read 'props.id' in the reducer.","ArrayExpression",["197"],"'setCaption' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'useFirestore' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'fetchCaptions'. Either include it or remove the dependency array.",["198"],"'combineReducers' is defined but never used.","'modalReducer' is defined but never used.","'commentModalState' is assigned a value but never used.","'data' is assigned a value but never used.","'id' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["195"],["196"],"no-global-assign","no-unsafe-negation",{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},"Update the dependencies array to be: [props.id]",{"range":"203","text":"204"},"Update the dependencies array to be: [fetchCaptions]",{"range":"205","text":"206"},[1202,1204],"[props.id]",[2232,2234],"[fetchCaptions]"]